/****************************************************************************
** Form implementation generated from reading ui file './mainwidget_gui.ui'
**
** Created by User Interface Compiler
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "mainwidget_gui.h"

#include <qvariant.h>
#include <board.h>
#include <gametree.h>
#include <qpushbutton.h>
#include <qframe.h>
#include <qlabel.h>
#include <qslider.h>
#include <qsplitter.h>
#include <qtabwidget.h>
#include <qbuttongroup.h>
#include <qcombobox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "normaltools_gui.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x01,
    0xd0, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x94, 0xbb, 0x6a, 0xdc,
    0x40, 0x14, 0x86, 0xbf, 0x5d, 0xa6, 0x38, 0x02, 0x07, 0xc6, 0x90, 0x62,
    0xb7, 0x73, 0x91, 0x17, 0xb0, 0x49, 0x20, 0xde, 0xd2, 0x45, 0x08, 0x2e,
    0xb7, 0xdc, 0xc2, 0xcd, 0xbe, 0x4b, 0x2a, 0x3f, 0x93, 0x8b, 0x14, 0x53,
    0x05, 0x5c, 0x2a, 0x60, 0x83, 0x02, 0x31, 0xc8, 0x85, 0x41, 0x53, 0x08,
    0x74, 0x20, 0x03, 0x93, 0x62, 0x56, 0x8a, 0xb4, 0xab, 0xbd, 0x90, 0x1f,
    0x84, 0x6e, 0x33, 0xdf, 0x9c, 0xcb, 0x3f, 0x33, 0x71, 0xce, 0xb1, 0x4f,
    0xcb, 0xe5, 0x32, 0x12, 0x40, 0x55, 0xd1, 0x90, 0x2e, 0x41, 0x78, 0xf8,
    0xfe, 0x30, 0xd9, 0x37, 0x67, 0x32, 0x06, 0x5c, 0xdf, 0xad, 0x63, 0x13,
    0x1a, 0x00, 0x34, 0x28, 0x28, 0x78, 0xf5, 0xb4, 0xf0, 0x56, 0xce, 0xb9,
    0x1d, 0xf0, 0x00, 0xb8, 0xbe, 0x5b, 0x47, 0x11, 0x01, 0x03, 0x62, 0x24,
    0xc1, 0x02, 0x54, 0x75, 0x85, 0xaa, 0xe2, 0xeb, 0x5d, 0xe8, 0x36, 0x78,
    0xda, 0x3e, 0xac, 0x56, 0xab, 0x04, 0x13, 0xb0, 0xd6, 0x22, 0x56, 0x98,
    0xbf, 0x9f, 0x23, 0x56, 0x38, 0xb7, 0xe7, 0x88, 0x91, 0x7f, 0x8b, 0x98,
    0x61, 0x54, 0x8b, 0xc5, 0x22, 0xb6, 0xcf, 0xdd, 0xaf, 0xcc, 0x64, 0x60,
    0x60, 0x6e, 0xe7, 0xc8, 0x99, 0x60, 0xdf, 0x59, 0x00, 0x6c, 0xb0, 0x94,
    0x65, 0x99, 0x22, 0x0b, 0x8a, 0x0d, 0x36, 0xa5, 0xbf, 0x4f, 0xce, 0x39,
    0x66, 0xb3, 0x59, 0xbc, 0xf8, 0x70, 0x11, 0xaf, 0x3f, 0x5f, 0xc7, 0xdb,
    0xaf, 0xb7, 0xf1, 0x54, 0x5d, 0x7e, 0xbc, 0x8c, 0x40, 0x77, 0x39, 0xe7,
    0x7a, 0x11, 0x92, 0x41, 0x00, 0x11, 0x01, 0xe0, 0xfe, 0xdb, 0x3d, 0x99,
    0x4d, 0xdf, 0x8a, 0x5f, 0x05, 0xc5, 0x53, 0x41, 0xfe, 0x33, 0xa7, 0x7c,
    0x2b, 0xf1, 0xb5, 0x27, 0xfe, 0x89, 0xa3, 0x01, 0x4e, 0x6f, 0xbe, 0xdc,
    0x44, 0x02, 0x34, 0xda, 0x24, 0x6b, 0xf4, 0x0a, 0x6e, 0xcf, 0x6c, 0x4a,
    0xdf, 0xda, 0x54, 0x1c, 0xb3, 0xe9, 0xfa, 0x46, 0x82, 0xec, 0xd4, 0xd2,
    0x74, 0x5d, 0x33, 0xe9, 0xde, 0xd4, 0xc9, 0x2e, 0xbe, 0xf6, 0x64, 0x3e,
    0x4b, 0x8d, 0xd8, 0xf8, 0xb0, 0xd1, 0x06, 0x41, 0x3a, 0xa8, 0x32, 0xec,
    0x36, 0x80, 0xe9, 0x56, 0xd4, 0x64, 0x8f, 0x56, 0xf9, 0x73, 0x4e, 0xe5,
    0xd3, 0xbb, 0xf7, 0x9e, 0xf2, 0xa5, 0x44, 0x6b, 0x3d, 0xdc, 0x10, 0xc0,
    0x74, 0x2b, 0x6e, 0xb8, 0x55, 0x48, 0x90, 0xe2, 0xa9, 0xa0, 0xfc, 0x5d,
    0x22, 0x46, 0x78, 0xf5, 0xaf, 0x54, 0x6f, 0x55, 0xf2, 0xe1, 0x11, 0x75,
    0x11, 0x76, 0xf7, 0x4d, 0x0d, 0x8b, 0x97, 0x62, 0x60, 0x6e, 0xad, 0x75,
    0x50, 0x3f, 0xd8, 0xad, 0x21, 0x6c, 0x59, 0x54, 0x55, 0x11, 0x93, 0x06,
    0xf5, 0x01, 0xdb, 0xa0, 0x6e, 0xfc, 0x48, 0x0d, 0xa7, 0xdb, 0xfb, 0xb1,
    0x1f, 0x69, 0x7b, 0x20, 0x9c, 0x2a, 0xe7, 0xdc, 0xc4, 0xec, 0xfb, 0x19,
    0xe3, 0xb8, 0xcf, 0x8e, 0xc9, 0xb4, 0xe4, 0xfe, 0x7e, 0xbc, 0xfa, 0x74,
    0x95, 0x4c, 0xde, 0xdf, 0xbb, 0x23, 0xef, 0xf9, 0x73, 0x3e, 0x88, 0xae,
    0x03, 0x6e, 0xeb, 0xf1, 0xc7, 0xe3, 0x7f, 0x45, 0x07, 0xbd, 0xd3, 0x66,
    0xec, 0x6c, 0x3b, 0x55, 0xfd, 0xb9, 0xa3, 0x07, 0x6c, 0x3f, 0xfd, 0x53,
    0x41, 0x07, 0x81, 0xc7, 0xc0, 0x87, 0xb2, 0xf9, 0x0b, 0x47, 0x55, 0x4f,
    0xe4, 0x44, 0xbb, 0x82, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0x04, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x8d, 0x94, 0x31, 0x8a, 0xdb,
    0x40, 0x18, 0x85, 0x3f, 0x19, 0x2d, 0xfc, 0x03, 0x0e, 0x8c, 0xc0, 0x81,
    0x55, 0x17, 0x5f, 0xc3, 0xe5, 0x16, 0x39, 0x80, 0x4a, 0x17, 0xdb, 0xf8,
    0x26, 0x61, 0xeb, 0x14, 0x01, 0x97, 0x4e, 0x91, 0x7e, 0xc9, 0x0d, 0xb6,
    0x48, 0xa1, 0x2b, 0x38, 0x90, 0xc2, 0x86, 0x2c, 0xc8, 0x85, 0x41, 0x53,
    0x18, 0xe6, 0x87, 0x08, 0x26, 0x85, 0x2c, 0xad, 0x64, 0xc9, 0x4e, 0x1e,
    0x0c, 0x8c, 0x66, 0x34, 0x6f, 0xe6, 0xbd, 0x79, 0xf3, 0x47, 0x79, 0x9e,
    0x73, 0x0d, 0x59, 0x96, 0x05, 0x2a, 0x50, 0x55, 0xb4, 0xaa, 0x9b, 0x20,
    0xbc, 0xfc, 0x78, 0x89, 0xae, 0xad, 0x89, 0xc6, 0x08, 0x57, 0x8f, 0xab,
    0xe0, 0x2b, 0x0f, 0x80, 0x56, 0x0a, 0x0a, 0x4e, 0x1d, 0x0d, 0x79, 0x83,
    0x3c, 0xcf, 0x07, 0xc4, 0x3d, 0xc2, 0xd5, 0xe3, 0x2a, 0x88, 0x08, 0xc4,
    0x20, 0xb1, 0xd4, 0x64, 0x15, 0x94, 0xa7, 0x12, 0x55, 0xc5, 0x9d, 0x86,
    0xa4, 0x97, 0xc4, 0x93, 0xa6, 0xb3, 0x5c, 0x2e, 0x6b, 0x32, 0x01, 0x6b,
    0x2d, 0x62, 0x85, 0x74, 0x96, 0x22, 0x56, 0x48, 0x6c, 0x82, 0xc4, 0xf2,
    0xb6, 0x49, 0xdc, 0x3f, 0xd5, 0x62, 0xb1, 0x08, 0x4d, 0xbf, 0x9d, 0x32,
    0xb1, 0x81, 0x18, 0x52, 0x9b, 0x22, 0x53, 0xc1, 0xbe, 0xb3, 0x6c, 0xbe,
    0x6d, 0xc6, 0x7d, 0xba, 0xbb, 0x6a, 0x61, 0x4d, 0x98, 0x65, 0x59, 0x90,
    0xa9, 0x60, 0xc5, 0x42, 0x0c, 0x36, 0xb1, 0x6c, 0xbe, 0x6e, 0x58, 0x7f,
    0x59, 0xb3, 0xdb, 0xef, 0x28, 0x8f, 0x25, 0xdb, 0x5f, 0x5b, 0x8a, 0x43,
    0x01, 0x40, 0xf8, 0x13, 0x30, 0xc6, 0xf4, 0xa4, 0x2f, 0x16, 0x8b, 0x90,
    0xe7, 0x79, 0xd4, 0x4a, 0x36, 0x18, 0xa8, 0x40, 0x44, 0x6a, 0xb2, 0xcf,
    0x6b, 0x88, 0x61, 0xfe, 0x61, 0x4e, 0x32, 0x4b, 0x48, 0x67, 0x29, 0x26,
    0x36, 0x38, 0xe7, 0x88, 0xee, 0x22, 0xbc, 0xf7, 0x88, 0xc8, 0xe0, 0x84,
    0x93, 0x87, 0x8f, 0x0f, 0x81, 0x0a, 0xbc, 0x7a, 0xb4, 0x52, 0x9e, 0xbf,
    0x3f, 0xf3, 0xf4, 0xe9, 0x09, 0xaf, 0x1e, 0x3b, 0xb5, 0xb5, 0x7c, 0x5b,
    0x9f, 0x9c, 0xf8, 0x7c, 0xeb, 0x80, 0x31, 0x06, 0xef, 0xfd, 0xc0, 0xcb,
    0x49, 0x2f, 0x67, 0x67, 0x09, 0xdb, 0x9f, 0x5b, 0xdc, 0xc9, 0xe1, 0x9c,
    0x03, 0x7d, 0x9b, 0xf7, 0xea, 0x11, 0x64, 0xf4, 0xa6, 0x5b, 0x0f, 0x9b,
    0x1d, 0xd1, 0x3a, 0x1e, 0x00, 0x45, 0x51, 0xa0, 0x95, 0x52, 0xba, 0xfa,
    0xdb, 0x39, 0x47, 0xf1, 0x5a, 0xa0, 0x27, 0xad, 0xf3, 0x78, 0x03, 0xb1,
    0x20, 0x6d, 0x78, 0x1b, 0xec, 0x5e, 0x77, 0x35, 0xc9, 0xef, 0x02, 0x89,
    0x85, 0x83, 0x3b, 0x50, 0x1e, 0xcb, 0x3a, 0x87, 0x17, 0xb0, 0x53, 0xdb,
    0x1b, 0x8f, 0x80, 0x36, 0x43, 0x22, 0x82, 0xf7, 0x9e, 0x24, 0x49, 0x06,
    0xe1, 0xd6, 0x93, 0xb6, 0xfe, 0x35, 0x08, 0x21, 0x10, 0x45, 0xfd, 0x08,
    0xf5, 0x22, 0xda, 0xf8, 0x22, 0x22, 0x38, 0xe7, 0x5a, 0x82, 0x4b, 0xa2,
    0x9b, 0x38, 0x3f, 0xbd, 0xd0, 0x6d, 0x21, 0x84, 0x70, 0x39, 0x36, 0xf6,
    0xcf, 0xfd, 0xec, 0xbe, 0x37, 0x96, 0xe7, 0xf9, 0xdb, 0xd3, 0xeb, 0xc2,
    0x18, 0x43, 0x08, 0x61, 0x34, 0x67, 0x8d, 0xd4, 0xf9, 0x7c, 0xce, 0xe1,
    0x78, 0x18, 0xcc, 0x4d, 0xce, 0xa7, 0xec, 0x19, 0xa1, 0xaa, 0x6d, 0xce,
    0x42, 0x08, 0x83, 0x96, 0xbe, 0x4f, 0xd9, 0xef, 0xf7, 0x97, 0x4a, 0x23,
    0x18, 0x3c, 0xf3, 0x3e, 0x69, 0xd7, 0xf0, 0xcb, 0xdb, 0xbc, 0x86, 0x56,
    0xf2, 0x58, 0x6d, 0xeb, 0xe2, 0x16, 0x59, 0x77, 0xed, 0x68, 0x81, 0xed,
    0x96, 0xa3, 0x5b, 0xf8, 0x67, 0x81, 0xfd, 0x5f, 0xe2, 0x5b, 0x6a, 0xfe,
    0x02, 0x9e, 0xa3, 0x4e, 0x8a, 0x4c, 0xb1, 0x11, 0x75, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0xba, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0xd5, 0x3f, 0x68, 0x1b,
    0x57, 0x1c, 0xc0, 0xf1, 0xaf, 0xcc, 0x0d, 0xbf, 0x40, 0x87, 0x77, 0x70,
    0xc3, 0x3b, 0x48, 0xe0, 0x04, 0x1e, 0x72, 0xc1, 0x83, 0x35, 0xc6, 0x74,
    0x2d, 0x14, 0x51, 0x3a, 0x08, 0x3a, 0x44, 0xe0, 0x49, 0xb4, 0x43, 0xb4,
    0xd5, 0x10, 0x28, 0xde, 0x8a, 0xa7, 0x82, 0x9b, 0xa1, 0x56, 0x0b, 0xc5,
    0xea, 0x96, 0x2e, 0x21, 0x1a, 0xb2, 0x14, 0x02, 0xce, 0xd2, 0x70, 0xea,
    0x12, 0x54, 0xda, 0x06, 0x8f, 0xe7, 0xc1, 0xf4, 0x8e, 0x22, 0xec, 0xc3,
    0x08, 0xe9, 0x0d, 0x82, 0x5f, 0x07, 0xa5, 0xe7, 0x28, 0x27, 0xb5, 0x34,
    0x3f, 0x38, 0x38, 0xde, 0xe3, 0x7d, 0xde, 0xef, 0xfd, 0xb9, 0xdf, 0xd5,
    0x92, 0x24, 0x61, 0x5d, 0x1c, 0x7c, 0x79, 0xa0, 0x59, 0x9e, 0x91, 0x9d,
    0x67, 0xb8, 0xb9, 0xc3, 0x18, 0x43, 0x68, 0x43, 0x0e, 0xbf, 0x3e, 0xac,
    0xad, 0x1b, 0x53, 0x5b, 0x05, 0xee, 0x3f, 0xd8, 0xd7, 0xf4, 0x3c, 0x05,
    0xc0, 0xcd, 0x1d, 0x38, 0x28, 0x5c, 0x01, 0x73, 0x70, 0xce, 0x01, 0x60,
    0xad, 0x65, 0x30, 0x18, 0x54, 0xe0, 0x25, 0xf0, 0xe8, 0x9b, 0x23, 0x3d,
    0xfd, 0xfd, 0x14, 0x3c, 0x10, 0x4f, 0x16, 0xd8, 0x1c, 0x2e, 0x27, 0x97,
    0x38, 0xe7, 0x28, 0x26, 0xcb, 0x28, 0xc0, 0xdd, 0xf7, 0xef, 0x72, 0xf8,
    0xd5, 0x75, 0xc6, 0x1b, 0x25, 0xf6, 0xf0, 0x35, 0x26, 0x60, 0x8c, 0x41,
    0x8c, 0x10, 0x06, 0x21, 0x62, 0x04, 0xdf, 0xf8, 0x88, 0x27, 0xd7, 0x93,
    0x78, 0xd7, 0x19, 0x0d, 0x5f, 0x0c, 0xd9, 0xfb, 0x7c, 0x4f, 0x2b, 0xe0,
    0x68, 0x34, 0x02, 0x0f, 0x42, 0x13, 0xe2, 0x1b, 0x9f, 0x7a, 0x58, 0xc7,
    0x86, 0x96, 0xfa, 0xad, 0x3a, 0x27, 0xcf, 0x4e, 0x78, 0xf4, 0xe3, 0x23,
    0x44, 0x04, 0x23, 0xa6, 0xb2, 0x45, 0xc3, 0x5f, 0x86, 0x2c, 0x81, 0xdd,
    0xfb, 0x5d, 0x9d, 0x31, 0x43, 0x44, 0xc0, 0x03, 0xe3, 0x1b, 0xfc, 0xc0,
    0x27, 0x8c, 0x42, 0x9a, 0x1f, 0x36, 0x71, 0x13, 0x47, 0x63, 0xbb, 0x41,
    0x7c, 0x3b, 0xc6, 0xe1, 0x10, 0xa4, 0x82, 0xb6, 0x5a, 0x2d, 0x2d, 0xc1,
    0x2c, 0xcf, 0xb8, 0xc1, 0x0d, 0x98, 0x83, 0x88, 0x20, 0x22, 0xd8, 0xc0,
    0x12, 0xda, 0x90, 0xe6, 0x07, 0x4d, 0x9e, 0xff, 0xfc, 0x9c, 0xe1, 0x8b,
    0x21, 0x9d, 0xdd, 0xce, 0x62, 0xd9, 0xb8, 0x0a, 0x98, 0xe7, 0xf9, 0x22,
    0xc3, 0xbd, 0x07, 0x7b, 0xca, 0x1c, 0x66, 0x6e, 0x86, 0x9b, 0xbb, 0xa5,
    0x0d, 0x8f, 0x6e, 0x45, 0x88, 0x11, 0xd2, 0xf3, 0x94, 0x27, 0x3f, 0x3d,
    0xa1, 0x75, 0xaf, 0xb5, 0x58, 0xc5, 0x9a, 0xe8, 0xde, 0xef, 0xea, 0x46,
    0x91, 0x17, 0x38, 0xe7, 0x4a, 0x6c, 0x36, 0x99, 0x51, 0x14, 0x05, 0xc5,
    0xa4, 0xa0, 0xbe, 0x59, 0xe7, 0xf4, 0x8f, 0x53, 0xdc, 0xc4, 0x71, 0x96,
    0x9e, 0x31, 0xfa, 0x75, 0x44, 0x67, 0xb7, 0x03, 0xf3, 0xd5, 0x60, 0x36,
    0xce, 0xd8, 0x48, 0xf3, 0xb4, 0xc4, 0x2e, 0x27, 0x97, 0xe4, 0xe3, 0x9c,
    0x2c, 0xcb, 0xc8, 0xf2, 0x8c, 0x3b, 0x9b, 0x77, 0x18, 0x3c, 0x1e, 0x90,
    0x9e, 0xa5, 0x64, 0xe7, 0x19, 0xfd, 0xef, 0xfa, 0x74, 0x3e, 0xed, 0x2c,
    0x9d, 0xf2, 0x9b, 0x51, 0x8c, 0x0b, 0x30, 0xef, 0x19, 0xc5, 0x43, 0x45,
    0x44, 0x8d, 0x31, 0x6a, 0xad, 0xd5, 0x68, 0x33, 0xd2, 0xe3, 0xde, 0xb1,
    0xaa, 0xaa, 0xea, 0x54, 0x75, 0x7a, 0x35, 0xd5, 0xe9, 0xd5, 0x54, 0x2f,
    0xfe, 0xba, 0x50, 0x55, 0xd5, 0xe6, 0x47, 0x4d, 0x05, 0x2a, 0x8f, 0x88,
    0x28, 0xf6, 0xa6, 0x5d, 0x6a, 0x10, 0x11, 0x35, 0x81, 0xd1, 0x8b, 0x3f,
    0x2f, 0xb4, 0xfd, 0x49, 0x5b, 0xa3, 0xcd, 0x48, 0xa3, 0x28, 0x52, 0x1b,
    0x58, 0x35, 0x81, 0xd1, 0xfd, 0x2f, 0xf6, 0xf5, 0xe4, 0xd9, 0xc9, 0x4a,
    0xd0, 0xde, 0xb4, 0x4a, 0x63, 0xbb, 0xb1, 0x3c, 0x8b, 0x27, 0xda, 0xbe,
    0xd7, 0xd6, 0x57, 0xbf, 0xbd, 0x52, 0xf1, 0x44, 0xc5, 0x93, 0xa5, 0x7e,
    0x63, 0x8c, 0x4e, 0xaf, 0xa6, 0x1a, 0x6f, 0xc5, 0x15, 0x30, 0xde, 0x8a,
    0x95, 0xd7, 0x9f, 0xde, 0x52, 0xc7, 0xcb, 0xe4, 0xa5, 0xb6, 0x77, 0xdb,
    0x2b, 0xb3, 0x00, 0xf4, 0xb8, 0x77, 0xac, 0x47, 0xbd, 0xa3, 0x4a, 0x7b,
    0x92, 0x24, 0x8b, 0x7b, 0x68, 0xad, 0x2d, 0x37, 0xd6, 0x04, 0x86, 0xe1,
    0x68, 0xc8, 0xe0, 0xf1, 0x60, 0xed, 0xf5, 0x38, 0x78, 0x78, 0x50, 0x39,
    0xe9, 0x7f, 0x8c, 0xb2, 0x38, 0xec, 0xec, 0xec, 0xe8, 0xdb, 0x03, 0xff,
    0x4f, 0x24, 0x49, 0x52, 0x83, 0x37, 0xbe, 0xe5, 0xc6, 0x76, 0xe3, 0x9d,
    0xb1, 0x78, 0x2b, 0x2e, 0xdf, 0x4b, 0xb0, 0xf7, 0x6d, 0xaf, 0xf6, 0x2e,
    0x68, 0x7c, 0x3b, 0xa6, 0xff, 0x7d, 0xbf, 0x2c, 0x5f, 0x2b, 0x0b, 0x6c,
    0xf3, 0xe3, 0xa6, 0x16, 0xe3, 0xe2, 0x5f, 0x21, 0x1b, 0x58, 0x06, 0x4f,
    0xff, 0xa3, 0xc0, 0xbe, 0x1d, 0xdd, 0xcf, 0xba, 0x9a, 0x8d, 0x33, 0x8a,
    0x62, 0x51, 0x58, 0x4d, 0x60, 0xf0, 0x8d, 0x4f, 0xff, 0x87, 0xfe, 0xda,
    0x5f, 0xc0, 0xdf, 0x02, 0xdf, 0x78, 0xab, 0x78, 0xb2, 0xbe, 0xaf, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0x6b, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x8d, 0x94, 0xb1, 0x6a, 0x1b,
    0x41, 0x10, 0x86, 0xbf, 0x33, 0x57, 0x8c, 0xc0, 0xc5, 0x0a, 0x14, 0xb8,
    0x03, 0x1b, 0xee, 0xc0, 0x29, 0x04, 0x49, 0x61, 0x97, 0x22, 0x09, 0x91,
    0x20, 0x90, 0x48, 0xa4, 0x12, 0x4e, 0x21, 0x43, 0x8a, 0x18, 0x52, 0x58,
    0xaf, 0x60, 0x52, 0xa6, 0x72, 0x15, 0x50, 0x0a, 0x83, 0x5f, 0x43, 0x84,
    0x14, 0x76, 0x70, 0xc2, 0xb5, 0x6e, 0x82, 0x93, 0x4e, 0x85, 0x0b, 0x95,
    0xba, 0x42, 0x70, 0x0b, 0x39, 0x98, 0x14, 0x6b, 0x9d, 0x4e, 0x96, 0x94,
    0xf8, 0x87, 0x6d, 0x76, 0x77, 0xbe, 0xfd, 0x67, 0x77, 0x66, 0xbd, 0x24,
    0x49, 0x58, 0xa7, 0x5e, 0xaf, 0xa7, 0xe4, 0x90, 0x4e, 0x53, 0x00, 0x6c,
    0x6e, 0x11, 0x84, 0xe1, 0xd7, 0xa1, 0xb7, 0x2e, 0xc6, 0x5b, 0x05, 0x3c,
    0x7c, 0x77, 0xa8, 0x99, 0xcd, 0x0a, 0x08, 0x16, 0x52, 0x9b, 0x42, 0x0e,
    0xd6, 0x5a, 0xb7, 0xc9, 0x87, 0xe4, 0x32, 0x59, 0x02, 0x2f, 0x00, 0xfb,
    0x47, 0x7d, 0x25, 0x77, 0x9b, 0xc5, 0x17, 0x07, 0xcb, 0x61, 0x32, 0x9d,
    0x60, 0xad, 0x75, 0x4e, 0xcb, 0x50, 0xc0, 0x18, 0xc3, 0x70, 0x38, 0x77,
    0xbc, 0x51, 0xb8, 0x7a, 0x7f, 0xa8, 0xe4, 0x20, 0x46, 0x30, 0xc6, 0x20,
    0x46, 0x08, 0x6b, 0x21, 0x62, 0x84, 0xaa, 0xa9, 0x22, 0xbe, 0xcc, 0x0f,
    0xf1, 0xe7, 0x8e, 0xd2, 0x34, 0xa5, 0xdd, 0x6e, 0xeb, 0x12, 0x70, 0xe6,
    0x2c, 0xf9, 0x9e, 0x50, 0x7f, 0x58, 0x27, 0x0e, 0x63, 0x82, 0x30, 0x20,
    0xde, 0x8e, 0x31, 0xc6, 0x38, 0xa8, 0x08, 0x46, 0x4c, 0x11, 0xa2, 0xaa,
    0xec, 0x3e, 0xda, 0x25, 0x4d, 0x53, 0x16, 0x80, 0xbd, 0x37, 0x3d, 0xcd,
    0xf2, 0x0c, 0x11, 0xa1, 0xf3, 0xaa, 0xc3, 0xe0, 0x74, 0x40, 0xbc, 0x13,
    0x13, 0x46, 0x21, 0x61, 0x10, 0x12, 0x6f, 0xc7, 0xc8, 0xa6, 0x20, 0x22,
    0x58, 0xdc, 0xc3, 0xa8, 0x2a, 0xad, 0xa7, 0x2d, 0xae, 0x7e, 0x5e, 0x01,
    0xd0, 0x78, 0xd6, 0xd0, 0x02, 0x68, 0x73, 0x4b, 0x85, 0x0a, 0xe4, 0x20,
    0x22, 0xf4, 0x8f, 0xfa, 0x1c, 0x7f, 0x38, 0xa6, 0xbe, 0x53, 0x27, 0x8e,
    0x62, 0xaa, 0xb5, 0x2a, 0x61, 0x2d, 0xa4, 0xe2, 0x57, 0x10, 0x5f, 0xc8,
    0xfe, 0x64, 0xb4, 0x9a, 0x2d, 0x2e, 0x7e, 0x5c, 0xb0, 0x90, 0x21, 0xb0,
    0xd1, 0x6e, 0xb7, 0x95, 0x1c, 0x32, 0x9b, 0x61, 0x73, 0x5b, 0x5c, 0xf8,
    0xc9, 0xc7, 0x13, 0x0e, 0xde, 0x1e, 0x10, 0x84, 0x01, 0xc6, 0x18, 0x77,
    0x6f, 0x3e, 0x4c, 0x26, 0x13, 0x07, 0xfb, 0x56, 0x82, 0xdd, 0xaa, 0xd5,
    0x6a, 0xe9, 0xc6, 0xec, 0xd5, 0x66, 0xb0, 0x6c, 0x9a, 0x91, 0xa6, 0x29,
    0xe9, 0x34, 0x65, 0xf0, 0x69, 0x40, 0x77, 0xbf, 0xeb, 0x52, 0xcd, 0x2d,
    0xd7, 0xbf, 0xae, 0xe9, 0xbc, 0xe8, 0xac, 0x84, 0xcd, 0x32, 0xf5, 0x44,
    0x44, 0xc1, 0xa5, 0x2a, 0x9b, 0x42, 0x75, 0xb3, 0x4a, 0x10, 0x04, 0x54,
    0x1f, 0x54, 0x09, 0x6a, 0x81, 0x3b, 0xb9, 0xd9, 0xa2, 0xbb, 0xdf, 0xa5,
    0xf3, 0xba, 0xc3, 0xf0, 0xcb, 0xb0, 0x48, 0xef, 0xae, 0xc4, 0x17, 0x57,
    0x00, 0xb3, 0xe2, 0x05, 0x98, 0xe4, 0x13, 0xb2, 0xdc, 0xb9, 0x1c, 0xdf,
    0x8c, 0x11, 0x5f, 0x18, 0x7c, 0x1e, 0x70, 0x76, 0x7a, 0xc6, 0xe8, 0xf7,
    0x68, 0x35, 0x69, 0xe6, 0x10, 0x0b, 0xf8, 0x28, 0xb8, 0x21, 0x22, 0x2a,
    0x22, 0x6a, 0x8c, 0x51, 0x53, 0x33, 0x1a, 0x04, 0x81, 0xaa, 0xaa, 0xb6,
    0x5f, 0xb6, 0x55, 0x7c, 0x51, 0x55, 0xd5, 0x60, 0x2b, 0x28, 0xf6, 0xdf,
    0x1d, 0xe2, 0x8b, 0x22, 0xbe, 0x2c, 0x4f, 0xfa, 0x0e, 0xae, 0xaa, 0xda,
    0x7c, 0xde, 0x5c, 0x58, 0x57, 0x55, 0x8d, 0xa2, 0x68, 0x3d, 0xf0, 0xb6,
    0xf5, 0x96, 0x16, 0x55, 0x55, 0x9b, 0x4f, 0x9a, 0x2b, 0x03, 0xd7, 0x39,
    0x4d, 0x92, 0xa4, 0xd4, 0x29, 0x25, 0xa9, 0xea, 0x72, 0x9d, 0x95, 0xe4,
    0x79, 0x1e, 0xe3, 0x9b, 0x31, 0x51, 0x14, 0x2d, 0x3c, 0x08, 0xdc, 0x16,
    0x76, 0x92, 0xcc, 0x7f, 0x8d, 0x59, 0x07, 0xac, 0x2b, 0x8d, 0x32, 0x74,
    0x34, 0x1a, 0x11, 0x6c, 0xb9, 0x4a, 0x38, 0xbf, 0x3c, 0xf7, 0x60, 0xa1,
    0xcd, 0x9d, 0xf6, 0x1e, 0xef, 0x15, 0xed, 0xf4, 0x3f, 0x79, 0x9e, 0x87,
    0xd9, 0x34, 0x8b, 0x73, 0xe5, 0xef, 0xab, 0xd1, 0x68, 0xe8, 0xdd, 0xa0,
    0xfb, 0xa8, 0x9c, 0xe1, 0xca, 0x0f, 0xf6, 0xbe, 0xe0, 0x32, 0xe8, 0x9f,
    0xc0, 0xff, 0x81, 0x57, 0x81, 0x66, 0xfa, 0x0b, 0x19, 0xf3, 0x4c, 0x55,
    0xac, 0xaa, 0x53, 0xa6, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0x0f, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x94, 0xbf, 0x8a, 0xdb,
    0x40, 0x10, 0x87, 0x3f, 0x1f, 0x5b, 0x8c, 0xc1, 0xc5, 0x0a, 0x5c, 0x58,
    0x45, 0x20, 0xee, 0xce, 0xd7, 0xf9, 0x20, 0x8d, 0x49, 0x1a, 0x17, 0xe9,
    0xd2, 0xf8, 0x3a, 0x1b, 0x5c, 0x44, 0xdd, 0xf9, 0x0d, 0x82, 0xd3, 0x84,
    0x7b, 0x1e, 0xa7, 0x48, 0x7f, 0x81, 0x14, 0xaa, 0x82, 0xdd, 0x5d, 0x5e,
    0xe0, 0x40, 0x57, 0x1c, 0x68, 0x0b, 0x83, 0xb6, 0x10, 0x4c, 0x0a, 0x59,
    0x3a, 0xff, 0x91, 0x9c, 0x23, 0x03, 0x8b, 0xb4, 0x2b, 0xcd, 0xa7, 0xdf,
    0x8c, 0x66, 0xa6, 0x15, 0xc7, 0x31, 0x4d, 0x36, 0x99, 0x4c, 0x94, 0x1c,
    0xbc, 0xf7, 0xf8, 0xbc, 0x58, 0x82, 0x70, 0xff, 0xeb, 0xbe, 0xd5, 0xe4,
    0xd3, 0xaa, 0x03, 0x46, 0xf3, 0x48, 0xb3, 0x3c, 0x03, 0xc0, 0xe7, 0x1e,
    0x3c, 0x38, 0xef, 0x28, 0xe1, 0xa5, 0xc5, 0x71, 0x7c, 0x02, 0x3e, 0x00,
    0x46, 0xf3, 0x48, 0x45, 0x04, 0x0c, 0x88, 0x91, 0x02, 0x96, 0x43, 0xba,
    0x4d, 0xf1, 0xde, 0xe3, 0xb6, 0xa7, 0xd0, 0x63, 0xf0, 0x45, 0x79, 0x33,
    0x9d, 0x4e, 0x0b, 0x98, 0x80, 0xb5, 0x16, 0xb1, 0x42, 0xd8, 0x0d, 0x11,
    0x2b, 0x04, 0x36, 0x60, 0xf9, 0x75, 0xf9, 0xf2, 0x11, 0x73, 0xa8, 0x6a,
    0x34, 0x1a, 0xe9, 0x09, 0xb0, 0x6d, 0xda, 0x60, 0x20, 0xb4, 0x21, 0x81,
    0x0d, 0xe8, 0x87, 0x7d, 0x7a, 0x61, 0x8f, 0xfe, 0x9b, 0x3e, 0xc3, 0xe1,
    0x90, 0xc5, 0xed, 0x02, 0x11, 0xc1, 0x8a, 0x6d, 0x4a, 0xdf, 0x0b, 0x70,
    0x32, 0x99, 0x68, 0x46, 0x46, 0x19, 0xae, 0x0d, 0x2c, 0x41, 0x37, 0x20,
    0x7c, 0x1b, 0x12, 0xf6, 0x42, 0xc6, 0xef, 0xc7, 0x00, 0x84, 0xbd, 0x10,
    0x4f, 0xf1, 0x63, 0x8e, 0xad, 0x54, 0x59, 0x89, 0x6f, 0xd3, 0x86, 0x1c,
    0x44, 0x04, 0x11, 0xa1, 0xd7, 0xed, 0xd1, 0xb6, 0x6d, 0x04, 0x61, 0xf6,
    0x79, 0xc6, 0xcd, 0xa7, 0x1b, 0xd6, 0x9b, 0x35, 0x41, 0x10, 0xe0, 0x70,
    0xcd, 0x0a, 0xc7, 0x1f, 0xc7, 0x4a, 0x0e, 0x99, 0xcf, 0x8a, 0xd2, 0xd8,
    0x4b, 0xb8, 0xed, 0x58, 0xa2, 0xdb, 0x88, 0xbb, 0x6f, 0x77, 0x60, 0x60,
    0xf9, 0x65, 0x49, 0x9a, 0xa6, 0x8d, 0xb0, 0xd1, 0x68, 0xa4, 0x17, 0x07,
    0x75, 0xe6, 0x3d, 0xd9, 0x36, 0xc3, 0x39, 0x87, 0xdb, 0x3a, 0x66, 0xf3,
    0x19, 0xf1, 0xcf, 0xb8, 0x7a, 0xbe, 0xfa, 0xbe, 0x2a, 0x3c, 0xf3, 0xe6,
    0x1c, 0x1a, 0x9f, 0xef, 0x14, 0xf9, 0xa2, 0x3c, 0xd8, 0x25, 0xa2, 0x3c,
    0x5f, 0xfd, 0x58, 0x91, 0x3c, 0x25, 0x24, 0x8f, 0x09, 0xe9, 0x73, 0xca,
    0xe2, 0x76, 0x81, 0xaa, 0xd2, 0x6a, 0xd5, 0xd7, 0x76, 0x4b, 0x8c, 0xa8,
    0xc7, 0x23, 0x46, 0xaa, 0xfc, 0x49, 0x47, 0x08, 0x3a, 0x01, 0xeb, 0xcd,
    0x9a, 0xf1, 0x87, 0x31, 0x4f, 0xee, 0x89, 0xf4, 0x39, 0xc5, 0x39, 0x87,
    0xb5, 0x96, 0x24, 0x49, 0x9a, 0x81, 0x40, 0x55, 0x43, 0x22, 0x52, 0x5d,
    0xd3, 0x34, 0xe5, 0x6a, 0x70, 0x45, 0xf2, 0x9c, 0x14, 0xc5, 0xbc, 0xf5,
    0x95, 0xea, 0x73, 0x0a, 0xd9, 0x01, 0xab, 0x25, 0x46, 0x14, 0x83, 0xaa,
    0xaa, 0x8a, 0x91, 0x62, 0x7f, 0xf4, 0xce, 0xe0, 0x72, 0xa0, 0xaa, 0x7a,
    0x72, 0x0e, 0x28, 0xbb, 0xd6, 0x3b, 0x38, 0x54, 0x55, 0x1d, 0x5c, 0x0e,
    0xea, 0x1d, 0xce, 0x40, 0xe3, 0x38, 0x3e, 0x6e, 0xa2, 0x17, 0x7b, 0xf8,
    0xf3, 0xd0, 0x18, 0xd2, 0x39, 0x33, 0x50, 0x34, 0xf7, 0x7e, 0x3f, 0x5e,
    0xbf, 0xbb, 0x2e, 0x8a, 0x7c, 0xbf, 0x77, 0x6b, 0xf6, 0xc9, 0x63, 0x52,
    0x81, 0xca, 0x01, 0x51, 0xab, 0x70, 0xf3, 0x7b, 0xf3, 0x5f, 0xea, 0x60,
    0x6f, 0x38, 0xd4, 0xcd, 0xb6, 0xd7, 0xda, 0xbe, 0x6f, 0xed, 0x80, 0xdd,
    0x0f, 0xff, 0xb5, 0xa0, 0xb3, 0xc0, 0x7f, 0x81, 0xcf, 0x45, 0xf3, 0x17,
    0x9b, 0xe5, 0x29, 0xe5, 0x1d, 0x53, 0x22, 0xe9, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image5_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0x46, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x94, 0xbf, 0x6b, 0xdb,
    0x40, 0x14, 0xc7, 0x3f, 0x36, 0x0a, 0x3c, 0x83, 0x0b, 0xa7, 0xa0, 0x41,
    0xca, 0x50, 0x3a, 0xd6, 0xd0, 0xa1, 0x19, 0x03, 0xfd, 0x03, 0x8a, 0x87,
    0x0e, 0xd9, 0x4a, 0xc6, 0x40, 0x87, 0x78, 0xab, 0x21, 0x4b, 0xb6, 0x92,
    0xa9, 0x90, 0x76, 0x68, 0xd2, 0xa1, 0xe0, 0x6e, 0xa1, 0x50, 0x88, 0x87,
    0x42, 0x96, 0xce, 0xc5, 0xee, 0x96, 0xa1, 0x43, 0x46, 0x43, 0x1b, 0x72,
    0x1a, 0x4c, 0x7c, 0x83, 0x41, 0x07, 0x3d, 0x50, 0x87, 0xb3, 0x65, 0xbb,
    0xfe, 0x91, 0x36, 0x5f, 0x10, 0xdc, 0x49, 0xf7, 0x3e, 0xf7, 0xbd, 0x77,
    0x4f, 0xaf, 0xd4, 0xe9, 0x74, 0x58, 0xa6, 0xc3, 0x57, 0x87, 0xb9, 0x4e,
    0x35, 0xfa, 0x4a, 0x63, 0x9d, 0x45, 0x29, 0x45, 0x12, 0x27, 0x1c, 0xbd,
    0x39, 0x2a, 0x2d, 0x8b, 0x29, 0x2d, 0x02, 0x1e, 0xec, 0x1f, 0xe4, 0xbd,
    0xab, 0x1e, 0x00, 0xd6, 0x59, 0xb0, 0x60, 0xac, 0x01, 0x07, 0xd6, 0x5a,
    0x00, 0xe2, 0x38, 0xa6, 0xdd, 0x6e, 0xcf, 0x81, 0x67, 0x80, 0xc7, 0xef,
    0x8e, 0xf3, 0xcb, 0x1f, 0x97, 0x10, 0x80, 0x04, 0xe2, 0x61, 0x0e, 0x06,
    0xc3, 0x01, 0xd6, 0x5a, 0xcc, 0x70, 0x16, 0x0a, 0xb0, 0xf5, 0x64, 0x8b,
    0xa3, 0xd7, 0x13, 0xc7, 0xe5, 0x02, 0xf6, 0x76, 0x04, 0x13, 0x50, 0x4a,
    0x21, 0x4a, 0x48, 0xa2, 0x04, 0x51, 0x42, 0xa8, 0x42, 0x24, 0x90, 0xc9,
    0x26, 0xc1, 0xc4, 0x51, 0xf7, 0x5b, 0x97, 0xe6, 0xcb, 0x66, 0x3e, 0x9e,
    0x17, 0x9f, 0x2e, 0x2e, 0x2e, 0x90, 0xaa, 0x90, 0xa8, 0x04, 0xa9, 0x0a,
    0xea, 0x9e, 0x02, 0x40, 0x39, 0x85, 0xd6, 0xda, 0x3b, 0x73, 0x16, 0xe5,
    0x94, 0x3f, 0xfe, 0x94, 0xba, 0xdf, 0xbb, 0xc5, 0xb8, 0x0c, 0xd0, 0xd8,
    0x6b, 0xe4, 0x19, 0x19, 0x22, 0x02, 0x01, 0xa8, 0x50, 0x11, 0x46, 0x21,
    0xc9, 0x83, 0x84, 0xfa, 0xd3, 0x3a, 0x67, 0x9f, 0xcf, 0x38, 0xff, 0x7a,
    0x8e, 0x88, 0x60, 0xb1, 0x08, 0x32, 0x97, 0xf7, 0xed, 0xed, 0xed, 0xbc,
    0x70, 0xa8, 0x53, 0x4d, 0x58, 0x0d, 0xc1, 0x81, 0x88, 0x20, 0x22, 0xc4,
    0x51, 0x4c, 0x45, 0x55, 0xd8, 0x79, 0xbe, 0x03, 0x6b, 0x3e, 0xa8, 0x12,
    0x54, 0x90, 0x40, 0x30, 0x98, 0x39, 0x60, 0x9a, 0xa6, 0xde, 0x61, 0x73,
    0xbf, 0x99, 0xe3, 0x20, 0xb3, 0x19, 0xd6, 0xd9, 0x99, 0x84, 0xab, 0xaa,
    0xe2, 0xf4, 0xd3, 0x29, 0xfc, 0x9e, 0x24, 0xc8, 0x3a, 0x3b, 0x07, 0x1b,
    0xab, 0xb1, 0xd7, 0xc8, 0x03, 0x93, 0x1a, 0x0f, 0x09, 0xfc, 0xed, 0x65,
    0xc3, 0x0c, 0x63, 0x0c, 0x46, 0x19, 0x2a, 0xc6, 0x3b, 0xc2, 0x01, 0x6b,
    0x7e, 0x53, 0x41, 0x96, 0x42, 0x75, 0x5f, 0x13, 0xf4, 0xd2, 0x9e, 0x0f,
    0xb0, 0xbe, 0x3c, 0xa6, 0x9d, 0x0c, 0x8c, 0x9f, 0xef, 0xb2, 0x0b, 0x80,
    0x1d, 0xda, 0xb9, 0x0b, 0x99, 0x96, 0xe9, 0x1b, 0x02, 0x41, 0x30, 0xce,
    0xc0, 0x68, 0xd3, 0x81, 0x1b, 0x90, 0x39, 0xef, 0x52, 0xff, 0xd2, 0x48,
    0x20, 0x64, 0x2e, 0xa3, 0x42, 0xc5, 0xd7, 0xe1, 0x2d, 0x0a, 0x44, 0x09,
    0x5c, 0x4d, 0x72, 0x63, 0xad, 0x45, 0xac, 0x60, 0x8c, 0x99, 0xd4, 0xdd,
    0x48, 0xd3, 0xf9, 0x5d, 0x24, 0x15, 0x29, 0xca, 0x49, 0x94, 0xcc, 0x06,
    0x38, 0x30, 0x43, 0xe3, 0x8f, 0xd7, 0x37, 0x58, 0xe3, 0xdf, 0xfd, 0x8b,
    0x42, 0x15, 0xc2, 0xe8, 0xd7, 0xcb, 0x57, 0x3d, 0xd7, 0x3f, 0xaf, 0xf3,
    0x9b, 0x9b, 0x9b, 0x95, 0x6b, 0x80, 0xbc, 0xd3, 0xe9, 0xf8, 0xc2, 0x8e,
    0xe3, 0x78, 0xe5, 0xce, 0x1b, 0xf7, 0x37, 0x58, 0x5f, 0x5f, 0x5f, 0xb9,
    0x66, 0xcc, 0x28, 0x03, 0x0b, 0xbb, 0xc6, 0xff, 0x6a, 0xcc, 0x28, 0x9a,
    0xc3, 0xe6, 0xe3, 0xcd, 0x3b, 0xc3, 0x6a, 0x8f, 0x6a, 0xc5, 0xb8, 0x00,
    0x9e, 0xbc, 0x3f, 0x29, 0xdd, 0x05, 0x5a, 0x7b, 0x58, 0xa3, 0xf5, 0xa1,
    0x55, 0x9c, 0x70, 0x61, 0x83, 0xad, 0x3f, 0xab, 0xe7, 0xa6, 0xbf, 0xba,
    0xe6, 0xe2, 0x28, 0xa6, 0xfd, 0xe5, 0x96, 0x06, 0xfb, 0xb7, 0x1a, 0x2f,
    0x1a, 0xb9, 0xee, 0x6b, 0x8c, 0xf1, 0x8d, 0x55, 0x45, 0x8a, 0x50, 0x85,
    0xb4, 0x3e, 0xb6, 0x96, 0xe6, 0xfc, 0x0f, 0x5f, 0xd4, 0x2f, 0x75, 0x13,
    0x80, 0x3e, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image6_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x89, 0x1d, 0x0d, 0x00, 0x00, 0x02,
    0x0c, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x94, 0x3d, 0x6b, 0x23,
    0x31, 0x10, 0x86, 0x1f, 0x1b, 0x15, 0x63, 0xf0, 0xc1, 0x2c, 0xa4, 0xb0,
    0xe1, 0x8a, 0x2d, 0xae, 0xf0, 0x6f, 0xf0, 0x4f, 0x70, 0x99, 0x22, 0x45,
    0xca, 0x33, 0xdc, 0xcf, 0x4c, 0x71, 0x85, 0x8b, 0x2b, 0x52, 0xa7, 0x5c,
    0xb8, 0x80, 0x5d, 0x1c, 0xac, 0x0c, 0x0b, 0x9a, 0x80, 0x60, 0xaf, 0x90,
    0xb5, 0xab, 0x75, 0x9c, 0xfb, 0x50, 0x33, 0x68, 0xa5, 0x7d, 0x79, 0x3f,
    0x66, 0x34, 0x3b, 0x1c, 0x0e, 0x7c, 0xb4, 0xee, 0x1f, 0xee, 0x7b, 0x22,
    0x98, 0x19, 0xcf, 0x3f, 0x9e, 0x51, 0x55, 0x88, 0x60, 0xd1, 0x68, 0x5e,
    0x9b, 0xd9, 0xad, 0x7f, 0xdc, 0xad, 0x8f, 0xfb, 0xaf, 0xfb, 0x3e, 0x58,
    0x40, 0x9c, 0x60, 0x18, 0xe2, 0x04, 0x60, 0xb2, 0xaf, 0xeb, 0xba, 0x07,
    0x68, 0x9a, 0x29, 0xf0, 0x04, 0x70, 0xff, 0x6d, 0xdf, 0x0b, 0x82, 0x88,
    0xa0, 0x4b, 0xc5, 0xa2, 0x41, 0x84, 0xb6, 0x6b, 0x07, 0x30, 0x00, 0x62,
    0x02, 0x27, 0xc2, 0xa6, 0xde, 0xf4, 0x2f, 0xcd, 0xcb, 0x00, 0x3a, 0x2f,
    0x59, 0x09, 0x02, 0x02, 0xaa, 0x8a, 0xa8, 0xb0, 0xbe, 0x5b, 0x23, 0x2a,
    0x54, 0x5a, 0x61, 0xd1, 0x10, 0x64, 0xa0, 0x61, 0xd1, 0x52, 0xc5, 0xd8,
    0x7c, 0xd9, 0xf4, 0xb7, 0x25, 0x3b, 0x58, 0xeb, 0x1a, 0x59, 0x0a, 0xfa,
    0x49, 0x01, 0xd0, 0xa8, 0x1c, 0x8f, 0x47, 0x20, 0x81, 0x88, 0x93, 0x01,
    0xdc, 0x6c, 0xdc, 0xd7, 0x9f, 0xeb, 0xbe, 0x79, 0x6d, 0x66, 0x0e, 0xe0,
    0xf1, 0xe1, 0xb1, 0x47, 0x40, 0x45, 0xc1, 0x81, 0x56, 0x4a, 0xa5, 0x15,
    0xb2, 0x14, 0xac, 0x4b, 0x3f, 0x05, 0x0b, 0x28, 0x17, 0x1b, 0x2e, 0xe0,
    0xd7, 0xb5, 0x5e, 0xd5, 0xbd, 0xcb, 0x9b, 0x8a, 0x2a, 0x79, 0x23, 0xc9,
    0xc3, 0xd5, 0xdd, 0x8a, 0x85, 0x2e, 0x20, 0x26, 0xf2, 0x0b, 0xb7, 0x18,
    0x95, 0x5c, 0x3c, 0xcc, 0x60, 0x90, 0xc8, 0x58, 0x34, 0xe6, 0xbb, 0xdd,
    0xae, 0x27, 0x42, 0xb0, 0x80, 0x45, 0xc3, 0xac, 0xb8, 0xb4, 0xd4, 0x24,
    0x5f, 0x75, 0x4c, 0x39, 0x33, 0x2a, 0xd2, 0x1f, 0x98, 0x46, 0x98, 0xe7,
    0x3e, 0xcb, 0x60, 0xa1, 0x0b, 0x78, 0xef, 0xf1, 0x9d, 0xc7, 0x7b, 0x0f,
    0x96, 0xce, 0x03, 0x61, 0xf4, 0x10, 0x7b, 0xc7, 0x50, 0x9c, 0x80, 0x03,
    0x67, 0x96, 0xd2, 0xc2, 0x52, 0x7b, 0x94, 0x29, 0xb6, 0x3e, 0xed, 0xbd,
    0xf7, 0x89, 0x79, 0x2c, 0xd2, 0xb5, 0xb1, 0x0a, 0x82, 0x8f, 0x1e, 0x71,
    0xc2, 0xe0, 0x61, 0x6e, 0xb1, 0x36, 0xb6, 0x84, 0x98, 0x58, 0x1e, 0x7f,
    0x1e, 0x11, 0x27, 0x9c, 0xfc, 0x69, 0x02, 0x96, 0x7d, 0x2d, 0xfb, 0x31,
    0x57, 0xf7, 0x2e, 0x2d, 0x33, 0xc4, 0x04, 0xef, 0xfd, 0x28, 0x2b, 0x8e,
    0x20, 0x66, 0x86, 0x88, 0x8c, 0xa0, 0x85, 0x22, 0x41, 0x70, 0x13, 0xa3,
    0x2f, 0x7d, 0xe5, 0x3b, 0x3f, 0x0d, 0x20, 0x33, 0x63, 0x64, 0x52, 0xca,
    0xc5, 0x5d, 0x02, 0x33, 0x63, 0xfe, 0xf4, 0xfd, 0x69, 0x32, 0x8b, 0x99,
    0xd1, 0x10, 0xd4, 0x95, 0x82, 0xe1, 0x9e, 0xd9, 0x64, 0x1c, 0xf3, 0xf9,
    0x9c, 0x7f, 0x5c, 0x65, 0x8b, 0x00, 0x69, 0x52, 0xf2, 0x38, 0x5e, 0x3c,
    0x0c, 0x16, 0x12, 0xe0, 0xe1, 0x70, 0xb8, 0xf9, 0x14, 0xbd, 0x63, 0x5e,
    0x56, 0x6c, 0x00, 0xcd, 0x8c, 0xcf, 0xdd, 0x79, 0xf6, 0xdf, 0x0c, 0x4b,
    0x66, 0x65, 0x3f, 0x9e, 0x7e, 0x9d, 0x66, 0x50, 0x48, 0xfe, 0x1b, 0xcb,
    0x5b, 0xcc, 0xf2, 0x03, 0x91, 0xc1, 0xe0, 0xea, 0xb5, 0xc9, 0xa0, 0xdb,
    0xed, 0xb6, 0xe7, 0x6a, 0x95, 0x5e, 0xe5, 0x89, 0x69, 0x7d, 0xcb, 0xd9,
    0xce, 0x1f, 0x3f, 0xb0, 0x7f, 0x02, 0xf6, 0x9d, 0xa7, 0xb2, 0x8a, 0xd6,
    0x5a, 0x88, 0xf0, 0x16, 0xdf, 0x6e, 0x2a, 0xfa, 0x0d, 0x5c, 0xb6, 0x7d,
    0x42, 0x31, 0x1a, 0x90, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a MainWidgetGui as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 */
MainWidgetGui::MainWidgetGui( QWidget* parent, const char* name, WFlags fl )
    : QWidget( parent, name, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    img.loadFromData( image5_data, sizeof( image5_data ), "PNG" );
    image5 = img;
    img.loadFromData( image6_data, sizeof( image6_data ), "PNG" );
    image6 = img;
    if ( !name )
	setName( "MainWidgetGui" );
    setMinimumSize( QSize( 400, 500 ) );
    QFont f( font() );
    setFont( f ); 

    boardFrame = new QFrame( this, "boardFrame" );
    boardFrame->setGeometry( QRect( 10, 60, 432, 380 ) );
    boardFrame->setFrameShape( QFrame::StyledPanel );
    boardFrame->setFrameShadow( QFrame::Raised );
    boardFrame->setMargin( 0 );
    boardFrameLayout = new QGridLayout( boardFrame, 1, 1, 0, 2, "boardFrameLayout"); 

    Layout7 = new QVBoxLayout( 0, 0, 6, "Layout7"); 

    Layout9 = new QVBoxLayout( 0, 0, 0, "Layout9"); 

    board = new Board( boardFrame, "board" );
    board->setMinimumSize( QSize( 250, 250 ) );
    Layout9->addWidget( board );

    Layout5 = new QHBoxLayout( 0, 1, 6, "Layout5"); 

    sliderLeftLabel = new QLabel( boardFrame, "sliderLeftLabel" );
    QFont sliderLeftLabel_font(  sliderLeftLabel->font() );
    sliderLeftLabel->setFont( sliderLeftLabel_font ); 
    sliderLeftLabel->setMargin( 2 );
    sliderLeftLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    Layout5->addWidget( sliderLeftLabel );

    slider = new QSlider( boardFrame, "slider" );
    slider->setMaximumSize( QSize( 32767, 20 ) );
    slider->setFocusPolicy( QSlider::NoFocus );
    slider->setMaxValue( 10 );
    slider->setPageStep( 1 );
    slider->setOrientation( QSlider::Horizontal );
    Layout5->addWidget( slider );

    sliderRightLabel = new QLabel( boardFrame, "sliderRightLabel" );
    QFont sliderRightLabel_font(  sliderRightLabel->font() );
    sliderRightLabel->setFont( sliderRightLabel_font ); 
    sliderRightLabel->setMargin( 2 );
    sliderRightLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    Layout5->addWidget( sliderRightLabel );
    Layout9->addLayout( Layout5 );
    Layout7->addLayout( Layout9 );

    boardFrameLayout->addLayout( Layout7, 0, 0 );

    toolsFrame = new QFrame( this, "toolsFrame" );
    toolsFrame->setGeometry( QRect( 460, 0, 150, 654 ) );
    toolsFrame->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, toolsFrame->sizePolicy().hasHeightForWidth() ) );
    toolsFrame->setMinimumSize( QSize( 148, 230 ) );
    toolsFrame->setMaximumSize( QSize( 150, 32767 ) );
    toolsFrame->setFrameShape( QFrame::StyledPanel );
    toolsFrame->setFrameShadow( QFrame::Raised );
    toolsFrameLayout = new QVBoxLayout( toolsFrame, 2, 6, "toolsFrameLayout"); 

    Layout6 = new QVBoxLayout( 0, 0, 6, "Layout6"); 

    moveNumLabel = new QLabel( toolsFrame, "moveNumLabel" );
    moveNumLabel->setMinimumSize( QSize( 120, 0 ) );
    QPalette pal;
    QColorGroup cg;
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    moveNumLabel->setPalette( pal );
    moveNumLabel->setFrameShape( QLabel::Panel );
    moveNumLabel->setFrameShadow( QLabel::Sunken );
    moveNumLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );
    Layout6->addWidget( moveNumLabel );

    turnLabel = new QLabel( toolsFrame, "turnLabel" );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    turnLabel->setPalette( pal );
    turnLabel->setFrameShape( QLabel::Panel );
    turnLabel->setFrameShadow( QLabel::Sunken );
    Layout6->addWidget( turnLabel );

    varLabel = new QLabel( toolsFrame, "varLabel" );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 170, 167, 165) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    varLabel->setPalette( pal );
    varLabel->setFrameShape( QLabel::Panel );
    varLabel->setFrameShadow( QLabel::Sunken );
    Layout6->addWidget( varLabel );
    toolsFrameLayout->addLayout( Layout6 );

    splitter1 = new QSplitter( toolsFrame, "splitter1" );
    splitter1->setOrientation( QSplitter::Horizontal );

    QWidget* privateLayoutWidget = new QWidget( splitter1, "layout14" );
    layout14 = new QVBoxLayout( privateLayoutWidget, 0, 0, "layout14"); 

    refreshButton = new QPushButton( privateLayoutWidget, "refreshButton" );
    refreshButton->setFocusPolicy( QPushButton::NoFocus );
    layout14->addWidget( refreshButton );

    passButton = new QPushButton( privateLayoutWidget, "passButton" );
    passButton->setFocusPolicy( QPushButton::NoFocus );
    layout14->addWidget( passButton );

    undoButton = new QPushButton( privateLayoutWidget, "undoButton" );
    undoButton->setFocusPolicy( QPushButton::NoFocus );
    layout14->addWidget( undoButton );

    adjournButton = new QPushButton( privateLayoutWidget, "adjournButton" );
    adjournButton->setFocusPolicy( QPushButton::NoFocus );
    layout14->addWidget( adjournButton );

    scoreButton = new QPushButton( privateLayoutWidget, "scoreButton" );
    scoreButton->setFocusPolicy( QPushButton::NoFocus );
    scoreButton->setToggleButton( TRUE );
    layout14->addWidget( scoreButton );

    resignButton = new QPushButton( privateLayoutWidget, "resignButton" );
    resignButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, resignButton->sizePolicy().hasHeightForWidth() ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 181, 179, 220) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 218, 217, 237) );
    cg.setColor( QColorGroup::Dark, QColor( 90, 89, 110) );
    cg.setColor( QColorGroup::Mid, QColor( 120, 119, 146) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 212, 208, 200) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 10, 36, 106) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 181, 179, 220) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 208, 205, 253) );
    cg.setColor( QColorGroup::Dark, QColor( 90, 89, 110) );
    cg.setColor( QColorGroup::Mid, QColor( 120, 119, 146) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 212, 208, 200) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 10, 36, 106) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 181, 179, 220) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 208, 205, 253) );
    cg.setColor( QColorGroup::Dark, QColor( 90, 89, 110) );
    cg.setColor( QColorGroup::Mid, QColor( 120, 119, 146) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 212, 208, 200) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 10, 36, 106) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    resignButton->setPalette( pal );
    resignButton->setFocusPolicy( QPushButton::NoFocus );
    resignButton->setToggleButton( FALSE );
    layout14->addWidget( resignButton );
    toolsFrameLayout->addWidget( splitter1 );

    toolsTabWidget = new QTabWidget( toolsFrame, "toolsTabWidget" );
    toolsTabWidget->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)3, 0, 0, toolsTabWidget->sizePolicy().hasHeightForWidth() ) );
    toolsTabWidget->setTabPosition( QTabWidget::Bottom );

    tab_ns = new QWidget( toolsTabWidget, "tab_ns" );
    tab_nsLayout = new QVBoxLayout( tab_ns, 0, 2, "tab_nsLayout"); 

    normalTools = new NormalTools( tab_ns, "normalTools" );
    normalTools->setMinimumSize( QSize( 138, 260 ) );
    tab_nsLayout->addWidget( normalTools );
    toolsTabWidget->insertTab( tab_ns, QString::fromLatin1("") );

    tab_e = new QWidget( toolsTabWidget, "tab_e" );

    editButtonGroup = new QButtonGroup( tab_e, "editButtonGroup" );
    editButtonGroup->setGeometry( QRect( 1, 1, 122, 170 ) );
    editButtonGroup->setFrameShape( QButtonGroup::Box );
    editButtonGroup->setFrameShadow( QButtonGroup::Sunken );
    editButtonGroup->setExclusive( TRUE );

    squareButton = new QPushButton( editButtonGroup, "squareButton" );
    squareButton->setGeometry( QRect( 22, 51, 30, 28 ) );
    squareButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, squareButton->sizePolicy().hasHeightForWidth() ) );
    squareButton->setMaximumSize( QSize( 30, 30 ) );
    squareButton->setFocusPolicy( QPushButton::NoFocus );
    squareButton->setPixmap( image0 );
    squareButton->setToggleButton( TRUE );
    editButtonGroup->insert( squareButton, 1 );

    circleButton = new QPushButton( editButtonGroup, "circleButton" );
    circleButton->setGeometry( QRect( 69, 51, 30, 28 ) );
    circleButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, circleButton->sizePolicy().hasHeightForWidth() ) );
    circleButton->setMaximumSize( QSize( 30, 30 ) );
    circleButton->setFocusPolicy( QPushButton::NoFocus );
    circleButton->setPixmap( image1 );
    circleButton->setToggleButton( TRUE );
    editButtonGroup->insert( circleButton, 2 );

    labelLetterButton = new QPushButton( editButtonGroup, "labelLetterButton" );
    labelLetterButton->setGeometry( QRect( 22, 119, 30, 28 ) );
    labelLetterButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, labelLetterButton->sizePolicy().hasHeightForWidth() ) );
    labelLetterButton->setMaximumSize( QSize( 30, 30 ) );
    labelLetterButton->setFocusPolicy( QPushButton::NoFocus );
    labelLetterButton->setPixmap( image2 );
    labelLetterButton->setToggleButton( TRUE );
    editButtonGroup->insert( labelLetterButton, 5 );

    crossButton = new QPushButton( editButtonGroup, "crossButton" );
    crossButton->setGeometry( QRect( 69, 85, 30, 28 ) );
    crossButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, crossButton->sizePolicy().hasHeightForWidth() ) );
    crossButton->setMaximumSize( QSize( 30, 30 ) );
    crossButton->setFocusPolicy( QPushButton::NoFocus );
    crossButton->setPixmap( image3 );
    crossButton->setToggleButton( TRUE );
    editButtonGroup->insert( crossButton, 4 );

    triangleButton = new QPushButton( editButtonGroup, "triangleButton" );
    triangleButton->setGeometry( QRect( 22, 85, 30, 28 ) );
    triangleButton->setMaximumSize( QSize( 30, 30 ) );
    triangleButton->setFocusPolicy( QPushButton::NoFocus );
    triangleButton->setPixmap( image4 );
    triangleButton->setToggleButton( TRUE );
    editButtonGroup->insert( triangleButton, 3 );

    labelNumberButton = new QPushButton( editButtonGroup, "labelNumberButton" );
    labelNumberButton->setGeometry( QRect( 69, 119, 30, 28 ) );
    labelNumberButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, labelNumberButton->sizePolicy().hasHeightForWidth() ) );
    labelNumberButton->setMaximumSize( QSize( 30, 30 ) );
    labelNumberButton->setFocusPolicy( QPushButton::NoFocus );
    labelNumberButton->setPixmap( image5 );
    labelNumberButton->setToggleButton( TRUE );
    editButtonGroup->insert( labelNumberButton, 6 );

    stoneButton = new QPushButton( editButtonGroup, "stoneButton" );
    stoneButton->setGeometry( QRect( 22, 17, 30, 28 ) );
    stoneButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, stoneButton->sizePolicy().hasHeightForWidth() ) );
    stoneButton->setMaximumSize( QSize( 30, 30 ) );
    stoneButton->setFocusPolicy( QPushButton::NoFocus );
    stoneButton->setPixmap( image6 );
    stoneButton->setToggleButton( TRUE );
    stoneButton->setOn( FALSE );
    editButtonGroup->insert( stoneButton, 0 );

    colorButton = new QPushButton( editButtonGroup, "colorButton" );
    colorButton->setGeometry( QRect( 69, 17, 30, 28 ) );
    colorButton->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, colorButton->sizePolicy().hasHeightForWidth() ) );
    colorButton->setMaximumSize( QSize( 30, 30 ) );
    colorButton->setFocusPolicy( QPushButton::NoFocus );
    editButtonGroup->insert( colorButton, 7 );
    toolsTabWidget->insertTab( tab_e, QString::fromLatin1("") );

    tab_tg = new QWidget( toolsTabWidget, "tab_tg" );
    tab_tgLayout = new QGridLayout( tab_tg, 1, 1, 0, 2, "tab_tgLayout"); 

    Frame9_2 = new QFrame( tab_tg, "Frame9_2" );
    Frame9_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, Frame9_2->sizePolicy().hasHeightForWidth() ) );
    Frame9_2->setMinimumSize( QSize( 0, 60 ) );
    Frame9_2->setFrameShape( QFrame::StyledPanel );
    Frame9_2->setFrameShadow( QFrame::Raised );
    Frame9_2Layout = new QGridLayout( Frame9_2, 1, 1, 0, 2, "Frame9_2Layout"); 

    GameTree1 = new GameTree( Frame9_2, "GameTree1" );
    GameTree1->setMinimumSize( QSize( 80, 180 ) );

    Frame9_2Layout->addWidget( GameTree1, 1, 0 );

    Layout25 = new QVBoxLayout( 0, 0, 6, "Layout25"); 

    TextLabel_opponent = new QLabel( Frame9_2, "TextLabel_opponent" );
    Layout25->addWidget( TextLabel_opponent );

    cb_opponent = new QComboBox( FALSE, Frame9_2, "cb_opponent" );
    Layout25->addWidget( cb_opponent );

    Layout24 = new QHBoxLayout( 0, 0, 6, "Layout24"); 

    pb_controls = new QPushButton( Frame9_2, "pb_controls" );
    pb_controls->setMaximumSize( QSize( 50, 32767 ) );
    pb_controls->setToggleButton( TRUE );
    Layout24->addWidget( pb_controls );

    pb_mark = new QPushButton( Frame9_2, "pb_mark" );
    pb_mark->setMaximumSize( QSize( 50, 32767 ) );
    pb_mark->setToggleButton( TRUE );
    Layout24->addWidget( pb_mark );
    Layout25->addLayout( Layout24 );

    Frame9_2Layout->addLayout( Layout25, 0, 0 );

    tab_tgLayout->addWidget( Frame9_2, 0, 0 );
    toolsTabWidget->insertTab( tab_tg, QString::fromLatin1("") );
    toolsFrameLayout->addWidget( toolsTabWidget );
    languageChange();
    resize( QSize(635, 603).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( passButton, SIGNAL( clicked() ), this, SLOT( doPass() ) );
    connect( slider, SIGNAL( valueChanged(int) ), this, SLOT( sliderChanged(int) ) );
    connect( undoButton, SIGNAL( clicked() ), this, SLOT( doUndo() ) );
    connect( adjournButton, SIGNAL( clicked() ), this, SLOT( doAdjourn() ) );
    connect( resignButton, SIGNAL( clicked() ), this, SLOT( doResign() ) );
    connect( refreshButton, SIGNAL( clicked() ), this, SLOT( doRefresh() ) );
    connect( editButtonGroup, SIGNAL( clicked(int) ), this, SLOT( setMarkType(int) ) );
    connect( scoreButton, SIGNAL( toggled(bool) ), this, SLOT( doScore(bool) ) );

    // tab order
}

/*
 *  Destroys the object and frees any allocated resources
 */
MainWidgetGui::~MainWidgetGui()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void MainWidgetGui::languageChange()
{
    setCaption( tr( "MainWidgetGui" ) );
    board->setCaption( QString::null );
    QWhatsThis::add( board, tr( "Click on the board to place a stone.\n"
"\n"
"When in normal mode, left click plays moves in alternating colors.\n"
"Shift + left click moves to the first move in the main branch.\n"
"Shift + right click moves to the next move in the current branch.\n"
"When in edit mode and editing stones, left click places a black, right click a white stone, clicking on an existant stone removes it.\n"
"When editing marks, left click sets, right click removes the mark. When editing letter marks, shift-click allows to customize the mark text.\n"
"When in score mode, left click to mark a group as dead, right click to mark it alive in seki. Click again to unmark as dead or seki." ) );
    sliderLeftLabel->setText( tr( "0" ) );
    QWhatsThis::add( sliderLeftLabel, tr( "Slider min value\n"
"\n"
"Minimum game move the slider can currently show." ) );
    QToolTip::add( slider, tr( "Navigate through the game" ) );
    QWhatsThis::add( slider, tr( "Navigate to move\n"
"\n"
"Use the slider to quickly navigate through the current branch of the game." ) );
    sliderRightLabel->setText( tr( "000" ) );
    QWhatsThis::add( sliderRightLabel, tr( "Slider max value\n"
"\n"
"Maximum game move the slider can currently show." ) );
    moveNumLabel->setText( tr( "Move 0" ) );
    QToolTip::add( moveNumLabel, tr( "Move number" ) );
    QWhatsThis::add( moveNumLabel, tr( "Move number\n"
"\n"
"Number of the currently displayed move." ) );
    turnLabel->setText( tr( "Black to play" ) );
    QToolTip::add( turnLabel, tr( "Player to play" ) );
    QWhatsThis::add( turnLabel, tr( "Player to play\n"
"\n"
"Indicates whether it is black's or white's turn." ) );
    varLabel->setText( tr( "0 brothers\n"
"0 sons" ) );
    QToolTip::add( varLabel, tr( "Variations" ) );
    QWhatsThis::add( varLabel, tr( "Variations\n"
"\n"
"Shows the number of sons and brothers within the current node." ) );
    refreshButton->setText( tr( "Refresh" ) );
    QToolTip::add( refreshButton, tr( "Refresh display" ) );
    QWhatsThis::add( refreshButton, tr( "Refresh\n"
"\n"
"Refresh board. Use this if you cannot see any stones on the board." ) );
    passButton->setText( tr( "Pass" ) );
    QToolTip::add( passButton, tr( "Pass move" ) );
    QWhatsThis::add( passButton, tr( "Pass\n"
"\n"
"Pass your turn." ) );
    undoButton->setText( tr( "Undo" ) );
    QToolTip::add( undoButton, tr( "Undo last move" ) );
    QWhatsThis::add( undoButton, tr( "Undo\n"
"\n"
"Undo the opponent's last move." ) );
    adjournButton->setText( tr( "Adjourn" ) );
    QToolTip::add( adjournButton, tr( "Request adjournment" ) );
    QWhatsThis::add( adjournButton, tr( "Adjourn.\n"
"\n"
"Send adjournment request to your opponent. If he accept it, the game will be adjourned and saved." ) );
    scoreButton->setText( tr( "Score" ) );
    QToolTip::add( scoreButton, tr( "Request adjournment" ) );
    QWhatsThis::add( scoreButton, tr( "Adjourn.\n"
"\n"
"Send adjournment request to your opponent. If he accept it, the game will be adjourned and saved." ) );
    resignButton->setText( tr( "RESIGN" ) );
    QToolTip::add( resignButton, tr( "Default Loss" ) );
    QWhatsThis::add( resignButton, tr( "Resign.\n"
"\n"
"Resign the game immediately. Clicking here is a default loss. Your opponent wins. Game ends." ) );
    QWhatsThis::add( toolsTabWidget, tr( "Tools tab\n"
"\n"
"N/S	normal/score tools\n"
"E	edit tools\n"
"TG	teach tools / game tree" ) );
    toolsTabWidget->changeTab( tab_ns, tr( "NS" ) );
    editButtonGroup->setTitle( tr( "Edit Tools" ) );
    QToolTip::add( editButtonGroup, tr( "Change the edit tool" ) );
    QWhatsThis::add( editButtonGroup, tr( "Change the edit mode\n"
"\n"
"When in edit mode, you can choose what you want to edit, like setting stones or certain marks." ) );
    squareButton->setText( QString::null );
    QToolTip::add( squareButton, tr( "Square" ) );
    QWhatsThis::add( squareButton, tr( "Square\n"
"\n"
"Edit square marks on the board. Left click sets a mark, right click removes it." ) );
    circleButton->setText( QString::null );
    QToolTip::add( circleButton, tr( "Circle" ) );
    QWhatsThis::add( circleButton, tr( "Circle\n"
"\n"
"Edit circle marks on the board. Left click sets a mark, right click removes it." ) );
    labelLetterButton->setText( QString::null );
    QToolTip::add( labelLetterButton, tr( "Letter" ) );
    QWhatsThis::add( labelLetterButton, tr( "Letter\n"
"\n"
"Edit letter marks on the board. Left click sets a mark, right click removes it. Shift-click lets you edit a custom text." ) );
    crossButton->setText( QString::null );
    QToolTip::add( crossButton, tr( "Cross" ) );
    QWhatsThis::add( crossButton, tr( "Cross\n"
"\n"
"Edit cross marks on the board. Left click sets a mark, right click removes it." ) );
    triangleButton->setText( QString::null );
    QToolTip::add( triangleButton, tr( "Triangle" ) );
    QWhatsThis::add( triangleButton, tr( "Triangle\n"
"\n"
"Edit triangle marks on the board. Left click sets a mark, right click removes it." ) );
    labelNumberButton->setText( QString::null );
    QToolTip::add( labelNumberButton, tr( "Number" ) );
    QWhatsThis::add( labelNumberButton, tr( "Number\n"
"\n"
"Edit Number marks on the board. Left click sets a mark, right click removes it." ) );
    stoneButton->setText( QString::null );
    QToolTip::add( stoneButton, tr( "Stone" ) );
    QWhatsThis::add( stoneButton, tr( "Stone\n"
"\n"
"Edit stones on the board. Left click for a black, right click for a white stone." ) );
    colorButton->setText( QString::null );
    QToolTip::add( colorButton, tr( "Color of next move" ) );
    QWhatsThis::add( colorButton, tr( "Color\n"
"\n"
"Set the color of next move. If left untouched, default color is chosen." ) );
    toolsTabWidget->changeTab( tab_e, tr( "E" ) );
    TextLabel_opponent->setText( tr( "opponent:" ) );
    cb_opponent->clear();
    cb_opponent->insertItem( tr( "-- none --" ) );
    QToolTip::add( cb_opponent, tr( "opponent: invited by teacher" ) );
    QWhatsThis::add( cb_opponent, tr( "opponent\n"
"\n"
"choose opponent from list to enable him playing with you in a teaching game." ) );
    pb_controls->setText( tr( "controls" ) );
    QToolTip::add( pb_controls, tr( "hand over controls to opponent" ) );
    QWhatsThis::add( pb_controls, tr( "hand over controls to opponent to allow him placing black and white stones, undo etc.\n"
"\n"
"Only teacher can give control,\n"
"both teacher and pupil can release control." ) );
    pb_mark->setText( tr( "mark" ) );
    QToolTip::add( pb_mark, tr( "remember that point for fast return" ) );
    QWhatsThis::add( pb_mark, tr( "push button at starting point to enable remembering.\n"
"After placing and/or undo release button for returning to starting point automatically." ) );
    toolsTabWidget->changeTab( tab_tg, tr( "TG" ) );
}

void MainWidgetGui::doAdjourn()
{
    qWarning( "MainWidgetGui::doAdjourn(): Not implemented yet" );
}

void MainWidgetGui::doPass()
{
    qWarning( "MainWidgetGui::doPass(): Not implemented yet" );
}

void MainWidgetGui::doRefresh()
{
    qWarning( "MainWidgetGui::doRefresh(): Not implemented yet" );
}

void MainWidgetGui::doResign()
{
    qWarning( "MainWidgetGui::doResign(): Not implemented yet" );
}

void MainWidgetGui::doScore(bool)
{
    qWarning( "MainWidgetGui::doScore(bool): Not implemented yet" );
}

void MainWidgetGui::doUndo()
{
    qWarning( "MainWidgetGui::doUndo(): Not implemented yet" );
}

void MainWidgetGui::setMarkType(int)
{
    qWarning( "MainWidgetGui::setMarkType(int): Not implemented yet" );
}

void MainWidgetGui::sliderChanged(int)
{
    qWarning( "MainWidgetGui::sliderChanged(int): Not implemented yet" );
}

#include "mainwidget_gui.moc"
