/****************************************************************************
** Form implementation generated from reading ui file './qnewgamedlg_gui.ui'
**
** Created by User Interface Compiler
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "qnewgamedlg_gui.h"

#include <qvariant.h>
#include <komispinbox.h>
#include <qpushbutton.h>
#include <qgroupbox.h>
#include <qlineedit.h>
#include <qtoolbutton.h>
#include <qlabel.h>
#include <qspinbox.h>
#include <qcombobox.h>
#include <qcheckbox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "komispinbox.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0xd7, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x92, 0xcf, 0x6b, 0x13,
    0x41, 0x14, 0xc7, 0x3f, 0xb3, 0x59, 0x69, 0x42, 0xf0, 0xe4, 0xa9, 0xa8,
    0x20, 0x78, 0x2f, 0xa8, 0x15, 0x64, 0xff, 0x01, 0x0f, 0x42, 0x51, 0xa8,
    0x7f, 0x80, 0x20, 0x14, 0x85, 0x1e, 0xf4, 0xa4, 0x87, 0xdc, 0x44, 0xbc,
    0x44, 0x50, 0x21, 0xe2, 0xc1, 0x8b, 0xb4, 0x20, 0xed, 0xd1, 0xe4, 0x20,
    0xde, 0x8a, 0x2c, 0x54, 0x3d, 0x46, 0x6c, 0xf6, 0x64, 0x4e, 0x62, 0x83,
    0x18, 0xba, 0xd9, 0xce, 0xee, 0x64, 0x7e, 0x78, 0x68, 0xb2, 0x4d, 0xe2,
    0x46, 0xf0, 0xc1, 0x63, 0x78, 0x33, 0xf3, 0x3e, 0xef, 0xfb, 0xe6, 0x8d,
    0x08, 0xc3, 0x90, 0x22, 0x0b, 0x82, 0xc0, 0x4d, 0xc6, 0x61, 0x18, 0x8a,
    0xa2, 0x7b, 0xde, 0xbf, 0x92, 0x27, 0x93, 0x82, 0x20, 0x70, 0xe3, 0xfd,
    0x49, 0xb8, 0x98, 0x55, 0x10, 0x04, 0x81, 0x2b, 0xaa, 0x36, 0x4f, 0xd1,
    0x5f, 0x0a, 0xe6, 0x49, 0xfd, 0xaf, 0x16, 0x8a, 0x6c, 0x56, 0xc1, 0xd8,
    0x44, 0x18, 0x86, 0x3c, 0x59, 0xbf, 0x39, 0x75, 0xf8, 0xe0, 0xc5, 0x76,
    0x61, 0xb5, 0x42, 0xc0, 0xca, 0xa5, 0xd3, 0xee, 0xe5, 0xfd, 0x6b, 0x2c,
    0x2e, 0x2d, 0xc3, 0x41, 0x8f, 0x1f, 0xdf, 0xbb, 0xdc, 0x79, 0xda, 0x9a,
    0x9b, 0x30, 0x0b, 0xf7, 0x01, 0x16, 0x97, 0x96, 0x71, 0x07, 0xbf, 0x10,
    0xc6, 0x70, 0x6a, 0x41, 0xb3, 0xf5, 0xf0, 0xea, 0x5c, 0x40, 0x79, 0xe6,
    0x91, 0x7d, 0x00, 0x92, 0x3e, 0xc2, 0x0c, 0xb9, 0x7e, 0xef, 0x15, 0x27,
    0xce, 0x5e, 0x04, 0xc0, 0xf3, 0x3c, 0x16, 0xca, 0x65, 0x52, 0x29, 0xf3,
    0x18, 0x60, 0xf5, 0xc6, 0xca, 0xd4, 0x7b, 0x1c, 0x01, 0x54, 0x4a, 0xf8,
    0xf1, 0x0b, 0xfe, 0x99, 0x0b, 0xbc, 0xd9, 0x7c, 0x0b, 0x80, 0x94, 0x92,
    0x34, 0x4d, 0x73, 0x97, 0x52, 0x92, 0x65, 0x19, 0x69, 0x9a, 0x72, 0xeb,
    0xf6, 0x1a, 0xd6, 0x5a, 0x6a, 0xb5, 0xda, 0x08, 0x00, 0x3c, 0xde, 0xfe,
    0xcc, 0xb3, 0xad, 0x1d, 0xf6, 0xf7, 0x7f, 0x52, 0xa9, 0x54, 0xb0, 0xd6,
    0x30, 0x1c, 0x2a, 0x0e, 0x0f, 0x13, 0x92, 0x24, 0x21, 0x8e, 0xe3, 0xdc,
    0x07, 0x83, 0x01, 0xad, 0x56, 0x8b, 0x46, 0xa3, 0x21, 0x7c, 0x80, 0xf7,
    0x1f, 0x76, 0xa8, 0x9c, 0xbb, 0x8c, 0x73, 0x0e, 0xad, 0x35, 0x59, 0x96,
    0xe5, 0x6b, 0x96, 0x65, 0x28, 0xa5, 0xd0, 0x5a, 0xa3, 0xb5, 0x06, 0xa0,
    0xdd, 0x6e, 0xd3, 0xe9, 0x74, 0x8e, 0x5b, 0x78, 0xfe, 0xae, 0xcd, 0xa3,
    0xd7, 0x2d, 0xfa, 0xfd, 0xdf, 0x54, 0xab, 0x55, 0x94, 0x52, 0x18, 0xa3,
    0x51, 0x6a, 0x98, 0xb7, 0x32, 0x86, 0x25, 0x49, 0x42, 0xb7, 0xdb, 0x65,
    0x63, 0x63, 0x53, 0xe4, 0x80, 0x93, 0xe7, 0xaf, 0x20, 0x84, 0x60, 0x30,
    0x88, 0x51, 0x2a, 0xc3, 0xf3, 0x4a, 0x18, 0x63, 0xd0, 0x5a, 0xe7, 0x00,
    0x29, 0x25, 0x5a, 0x6b, 0xa2, 0x28, 0x62, 0x77, 0xf7, 0xd3, 0xf4, 0x18,
    0xd7, 0xee, 0xae, 0xb3, 0xb7, 0xf7, 0x0d, 0xdf, 0x2f, 0x51, 0x2a, 0x95,
    0x10, 0x42, 0x60, 0x8c, 0x45, 0x6b, 0x8d, 0x52, 0x6a, 0xd4, 0xc6, 0x91,
    0x82, 0x28, 0x8a, 0x68, 0x36, 0x9b, 0xc7, 0x63, 0xfc, 0xda, 0x2f, 0x53,
    0xaf, 0xd7, 0x01, 0x37, 0x1a, 0x95, 0x00, 0x1c, 0xce, 0x39, 0xac, 0xb5,
    0x18, 0x63, 0x31, 0xc6, 0x60, 0xad, 0x21, 0x8e, 0x63, 0x7a, 0xbd, 0xde,
    0xd4, 0xbf, 0xf8, 0x03, 0x85, 0xc5, 0x20, 0x9b, 0x1b, 0xcb, 0xdd, 0x47,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x71, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x93, 0xbd, 0xae, 0xe2,
    0x30, 0x10, 0x85, 0x3f, 0xc7, 0x4e, 0xa4, 0xa0, 0x08, 0x29, 0x08, 0xe9,
    0x96, 0x69, 0x78, 0x8a, 0xd0, 0xd2, 0xd3, 0xd1, 0xc2, 0xbb, 0x22, 0xe5,
    0x59, 0xf8, 0x09, 0x0d, 0x52, 0x42, 0xb0, 0x63, 0xcf, 0x6d, 0x2e, 0xd9,
    0x5d, 0x48, 0x76, 0xb5, 0x47, 0x9a, 0x66, 0xe4, 0x39, 0x73, 0xce, 0xe8,
    0x58, 0x55, 0x55, 0xc5, 0x18, 0xb6, 0xdb, 0xad, 0x3c, 0x9f, 0x4f, 0xac,
    0xb5, 0x38, 0xe7, 0x38, 0x1e, 0x8f, 0x6a, 0xec, 0x9d, 0x79, 0x6f, 0x1c,
    0x0e, 0x07, 0x01, 0xc8, 0xb2, 0x0c, 0xad, 0x35, 0x00, 0x21, 0x04, 0xd6,
    0xeb, 0xb5, 0x88, 0x08, 0x55, 0x55, 0xa9, 0x51, 0x82, 0xfd, 0x7e, 0x2f,
    0x69, 0x9a, 0xb2, 0x58, 0x2c, 0xd0, 0x5a, 0xe3, 0x9c, 0xe3, 0x7e, 0xbf,
    0x03, 0xd0, 0xf7, 0x3d, 0x7d, 0xdf, 0x23, 0x22, 0x94, 0x65, 0x29, 0xc0,
    0x40, 0x34, 0x10, 0xc4, 0x71, 0xcc, 0x7c, 0x3e, 0x27, 0xcf, 0x73, 0x66,
    0xb3, 0x19, 0xde, 0x7b, 0xea, 0xba, 0x26, 0x84, 0x40, 0xd7, 0x75, 0x58,
    0x6b, 0x09, 0x21, 0x7c, 0x58, 0x88, 0x00, 0x76, 0xbb, 0x9d, 0x68, 0xad,
    0x49, 0xd3, 0x94, 0xe5, 0x72, 0x49, 0x51, 0x14, 0xac, 0x56, 0x2b, 0x8a,
    0xa2, 0x20, 0xcf, 0x73, 0x92, 0x24, 0x41, 0xa9, 0x3f, 0x4f, 0xf0, 0x52,
    0x62, 0x00, 0xbc, 0xf7, 0x84, 0x10, 0x88, 0xa2, 0x88, 0x34, 0x4d, 0xf9,
    0xfa, 0xfa, 0x22, 0xcb, 0x32, 0xe2, 0x38, 0xe6, 0x74, 0x3a, 0x61, 0xcc,
    0xc7, 0xa9, 0x7e, 0x29, 0xd8, 0x6c, 0x36, 0x62, 0xad, 0xe5, 0xf1, 0x78,
    0xd0, 0x34, 0x0d, 0x6d, 0xdb, 0xe2, 0x9c, 0xc3, 0x18, 0x43, 0x92, 0x24,
    0xc3, 0x11, 0x45, 0xe4, 0x63, 0xb8, 0x2c, 0x4b, 0x31, 0xce, 0x39, 0x94,
    0x52, 0x68, 0xad, 0xa9, 0xeb, 0x7a, 0x90, 0x7b, 0xbd, 0x5e, 0xa9, 0xeb,
    0x9a, 0xcb, 0xe5, 0x42, 0xdb, 0xb6, 0x78, 0xef, 0x47, 0x15, 0x18, 0xef,
    0x3d, 0xd6, 0x5a, 0x44, 0x04, 0xef, 0x3d, 0x5d, 0xd7, 0x71, 0xbb, 0xdd,
    0x48, 0x92, 0x84, 0xa6, 0x69, 0x38, 0x9f, 0xcf, 0xb4, 0x6d, 0x3b, 0xaa,
    0x00, 0x40, 0x01, 0xa2, 0x94, 0x22, 0x8a, 0x22, 0xb4, 0xd6, 0x18, 0x63,
    0x06, 0xcf, 0xce, 0x39, 0xac, 0xb5, 0x93, 0xdb, 0x01, 0xf8, 0x49, 0xa2,
    0xbc, 0x4a, 0x29, 0x35, 0xd4, 0xef, 0xfd, 0xb1, 0xaa, 0xaa, 0xea, 0x33,
    0x89, 0x53, 0x52, 0xa7, 0x10, 0xfd, 0xa8, 0x18, 0xcd, 0xf9, 0xdf, 0xf0,
    0x9a, 0x89, 0xfe, 0x77, 0xf0, 0x1d, 0xea, 0xfd, 0x37, 0xbe, 0x12, 0xf6,
    0xaf, 0xcd, 0x93, 0x04, 0x53, 0x44, 0x53, 0x36, 0xbf, 0x01, 0x66, 0x5e,
    0xcb, 0xb8, 0xfb, 0xf3, 0x8b, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0xba, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x6d, 0x93, 0x4b, 0x4e, 0x04,
    0x31, 0x0c, 0x44, 0x9f, 0x9d, 0x30, 0x1f, 0xf5, 0x34, 0x12, 0xbf, 0xc5,
    0x70, 0xff, 0xb3, 0x70, 0x12, 0x56, 0xec, 0x10, 0x8d, 0xd2, 0x9d, 0xc4,
    0x31, 0x8b, 0x21, 0xd1, 0x0c, 0x22, 0xbb, 0x44, 0xe5, 0xb2, 0x5d, 0x55,
    0x91, 0xb7, 0xb7, 0x37, 0xfe, 0x3b, 0x8f, 0x8f, 0x8f, 0x6e, 0x66, 0x88,
    0x08, 0xdb, 0xb6, 0x91, 0x52, 0x92, 0xff, 0x70, 0xf1, 0xef, 0xc3, 0xeb,
    0xeb, 0xab, 0x8b, 0x5c, 0xb0, 0xdb, 0xb6, 0xd1, 0x5a, 0x43, 0x55, 0x39,
    0x9d, 0x4e, 0x5e, 0x4a, 0x61, 0xdb, 0x36, 0xf9, 0x97, 0x60, 0x9a, 0x26,
    0xbf, 0xbf, 0xbf, 0x27, 0x84, 0xc0, 0xb6, 0x6d, 0x74, 0x12, 0x00, 0x77,
    0xbf, 0x80, 0x63, 0xc4, 0xdd, 0x3d, 0xa5, 0x44, 0x08, 0x41, 0x00, 0xb4,
    0x83, 0xe6, 0x79, 0x46, 0x55, 0x7b, 0x37, 0x42, 0x08, 0x98, 0x19, 0xee,
    0x4e, 0x8c, 0x11, 0x33, 0x23, 0xe7, 0x0c, 0xc0, 0xe1, 0x70, 0x18, 0xe4,
    0x0a, 0x70, 0x3a, 0x9d, 0x3c, 0xe7, 0x8c, 0x99, 0x31, 0xcf, 0x33, 0x4f,
    0x4f, 0x4f, 0xbc, 0xbc, 0xbc, 0xb0, 0xdb, 0xed, 0x28, 0xa5, 0xe0, 0xee,
    0xb8, 0x3b, 0x66, 0x46, 0x29, 0x85, 0x9c, 0x33, 0xa5, 0x14, 0x1f, 0x04,
    0x21, 0x04, 0x00, 0x44, 0x84, 0x9c, 0x33, 0xaa, 0xca, 0xf1, 0x78, 0x1c,
    0x53, 0x99, 0x19, 0x21, 0x04, 0x54, 0x15, 0x77, 0x47, 0x55, 0xd9, 0xed,
    0x76, 0x97, 0xb5, 0x44, 0xc4, 0xbb, 0x50, 0xeb, 0xba, 0x52, 0x6b, 0xe5,
    0xee, 0xee, 0x8e, 0xfd, 0x7e, 0xcf, 0xf7, 0xf7, 0x37, 0xad, 0x35, 0x4a,
    0x29, 0xc4, 0x18, 0x69, 0xad, 0xe1, 0xee, 0x88, 0x08, 0x66, 0xc6, 0xe7,
    0xe7, 0xa7, 0xc7, 0xe3, 0xf1, 0x48, 0xad, 0x75, 0x30, 0xd7, 0x5a, 0x79,
    0x7f, 0x7f, 0x27, 0x84, 0xc0, 0xb2, 0x2c, 0x88, 0x08, 0xad, 0xb5, 0x21,
    0x6c, 0xad, 0x75, 0x4c, 0x7c, 0x38, 0x1c, 0x88, 0x29, 0x25, 0xe6, 0x79,
    0xc6, 0xcc, 0x68, 0xad, 0xd1, 0x5a, 0x1b, 0x84, 0xfd, 0xde, 0x35, 0xb8,
    0x16, 0xb4, 0x93, 0xe9, 0xba, 0xae, 0xb4, 0xd6, 0x08, 0x21, 0x50, 0x6b,
    0xa5, 0x94, 0x82, 0x99, 0x01, 0x60, 0x66, 0xd4, 0x5a, 0x87, 0x85, 0x5d,
    0xa7, 0x8e, 0x5d, 0x96, 0x05, 0xdd, 0xef, 0xf7, 0xd2, 0x8b, 0x6a, 0xad,
    0x43, 0xa8, 0xae, 0xfe, 0xaf, 0xf7, 0xc3, 0xc2, 0x6b, 0xec, 0xf9, 0x7c,
    0x16, 0xed, 0x89, 0xeb, 0x1a, 0xf4, 0xd0, 0xa8, 0x2a, 0xad, 0xb5, 0x9b,
    0xd5, 0x4a, 0x29, 0x37, 0x6e, 0x5d, 0x07, 0x49, 0x52, 0x4a, 0xa8, 0xea,
    0x48, 0x60, 0x1f, 0xb5, 0x77, 0xed, 0x5a, 0xd4, 0x5a, 0x59, 0xd7, 0x95,
    0x87, 0x87, 0x07, 0xb9, 0x89, 0xb2, 0xbb, 0x4b, 0x4a, 0xc9, 0x55, 0x95,
    0x9c, 0x33, 0x21, 0x84, 0x41, 0xd6, 0xad, 0xeb, 0x8e, 0x4c, 0xd3, 0x34,
    0x72, 0x3e, 0xa2, 0xfc, 0xdb, 0x55, 0x96, 0x65, 0x19, 0x3b, 0xe7, 0x9c,
    0x69, 0xad, 0x11, 0x63, 0xa4, 0x94, 0xc2, 0xd7, 0xd7, 0xd7, 0x4d, 0xf1,
    0xcd, 0x04, 0x57, 0x9f, 0x4a, 0x00, 0x3e, 0x3e, 0x3e, 0xbc, 0xa7, 0xad,
    0xd6, 0xca, 0xf3, 0xf3, 0xb3, 0x4c, 0xd3, 0xf4, 0x17, 0xce, 0x0f, 0x61,
    0x62, 0x4e, 0x5e, 0xd8, 0x58, 0x52, 0x04, 0x00, 0x00, 0x00, 0x00, 0x49,
    0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a QNewGameDlgGui as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 *  The dialog will by default be modeless, unless you set 'modal' to
 *  TRUE to construct a modal dialog.
 */
QNewGameDlgGui::QNewGameDlgGui( QWidget* parent, const char* name, bool modal, WFlags fl )
    : QDialog( parent, name, modal, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    if ( !name )
	setName( "QNewGameDlgGui" );
    setEnabled( TRUE );
    setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, sizePolicy().hasHeightForWidth() ) );
    setMinimumSize( QSize( 400, 375 ) );
    setSizeGripEnabled( TRUE );
    setModal( FALSE );
    QNewGameDlgGuiLayout = new QGridLayout( this, 1, 1, 11, 6, "QNewGameDlgGuiLayout"); 

    IGSgroup_box_2 = new QGroupBox( this, "IGSgroup_box_2" );
    IGSgroup_box_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, IGSgroup_box_2->sizePolicy().hasHeightForWidth() ) );
    IGSgroup_box_2->setColumnLayout(0, Qt::Vertical );
    IGSgroup_box_2->layout()->setSpacing( 6 );
    IGSgroup_box_2->layout()->setMargin( 11 );
    IGSgroup_box_2Layout = new QHBoxLayout( IGSgroup_box_2->layout() );
    IGSgroup_box_2Layout->setAlignment( Qt::AlignTop );

    _LineEdit_GameToLoad = new QLineEdit( IGSgroup_box_2, "_LineEdit_GameToLoad" );
    _LineEdit_GameToLoad->setEnabled( TRUE );
    IGSgroup_box_2Layout->addWidget( _LineEdit_GameToLoad );

    _FilePathButton = new QToolButton( IGSgroup_box_2, "_FilePathButton" );
    _FilePathButton->setIconSet( QIconSet( image0 ) );
    IGSgroup_box_2Layout->addWidget( _FilePathButton );

    QNewGameDlgGuiLayout->addMultiCellWidget( IGSgroup_box_2, 2, 2, 0, 1 );

    groupBox1_2 = new QGroupBox( this, "groupBox1_2" );
    groupBox1_2->setColumnLayout(0, Qt::Vertical );
    groupBox1_2->layout()->setSpacing( 6 );
    groupBox1_2->layout()->setMargin( 11 );
    groupBox1_2Layout = new QGridLayout( groupBox1_2->layout() );
    groupBox1_2Layout->setAlignment( Qt::AlignTop );

    textLabel1_2 = new QLabel( groupBox1_2, "textLabel1_2" );

    groupBox1_2Layout->addMultiCellWidget( textLabel1_2, 2, 2, 0, 1 );

    _BlackLevelSpinBox = new QSpinBox( groupBox1_2, "_BlackLevelSpinBox" );
    _BlackLevelSpinBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, _BlackLevelSpinBox->sizePolicy().hasHeightForWidth() ) );
    _BlackLevelSpinBox->setMaxValue( 10 );
    _BlackLevelSpinBox->setValue( 10 );

    groupBox1_2Layout->addWidget( _BlackLevelSpinBox, 2, 2 );

    textLabel1 = new QLabel( groupBox1_2, "textLabel1" );

    groupBox1_2Layout->addWidget( textLabel1, 1, 0 );

    pixmapLabel2 = new QLabel( groupBox1_2, "pixmapLabel2" );
    pixmapLabel2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, pixmapLabel2->sizePolicy().hasHeightForWidth() ) );
    pixmapLabel2->setPixmap( image1 );
    pixmapLabel2->setScaledContents( TRUE );

    groupBox1_2Layout->addWidget( pixmapLabel2, 0, 0 );

    _BlackPlayerLineEdit = new QLineEdit( groupBox1_2, "_BlackPlayerLineEdit" );
    _BlackPlayerLineEdit->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, _BlackPlayerLineEdit->sizePolicy().hasHeightForWidth() ) );

    groupBox1_2Layout->addMultiCellWidget( _BlackPlayerLineEdit, 1, 1, 1, 2 );

    _BlackTypeComboBox = new QComboBox( FALSE, groupBox1_2, "_BlackTypeComboBox" );
    _BlackTypeComboBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, _BlackTypeComboBox->sizePolicy().hasHeightForWidth() ) );

    groupBox1_2Layout->addMultiCellWidget( _BlackTypeComboBox, 0, 0, 1, 2 );

    QNewGameDlgGuiLayout->addWidget( groupBox1_2, 0, 1 );

    groupBox4 = new QGroupBox( this, "groupBox4" );
    groupBox4->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, groupBox4->sizePolicy().hasHeightForWidth() ) );
    groupBox4->setColumnLayout(0, Qt::Vertical );
    groupBox4->layout()->setSpacing( 6 );
    groupBox4->layout()->setMargin( 11 );
    groupBox4Layout = new QGridLayout( groupBox4->layout() );
    groupBox4Layout->setAlignment( Qt::AlignTop );

    Layout10 = new QHBoxLayout( 0, 0, 6, "Layout10"); 

    TextLabel3 = new QLabel( groupBox4, "TextLabel3" );
    Layout10->addWidget( TextLabel3 );

    _SizeSpinBox = new QSpinBox( groupBox4, "_SizeSpinBox" );
    _SizeSpinBox->setMaximumSize( QSize( 60, 32767 ) );
    _SizeSpinBox->setMaxValue( 36 );
    _SizeSpinBox->setMinValue( 4 );
    _SizeSpinBox->setValue( 19 );
    Layout10->addWidget( _SizeSpinBox );

    groupBox4Layout->addLayout( Layout10, 0, 0 );

    Layout14 = new QHBoxLayout( 0, 0, 6, "Layout14"); 

    TextLabel5 = new QLabel( groupBox4, "TextLabel5" );
    Layout14->addWidget( TextLabel5 );

    _HandicapSpinBox = new QSpinBox( groupBox4, "_HandicapSpinBox" );
    _HandicapSpinBox->setMaximumSize( QSize( 60, 32767 ) );
    _HandicapSpinBox->setMaxValue( 13 );
    Layout14->addWidget( _HandicapSpinBox );

    groupBox4Layout->addLayout( Layout14, 2, 0 );

    Layout15 = new QHBoxLayout( 0, 0, 6, "Layout15"); 

    TextLabel4 = new QLabel( groupBox4, "TextLabel4" );
    Layout15->addWidget( TextLabel4 );

    komiSpin = new KomiSpinBox( groupBox4, "komiSpin" );
    komiSpin->setMinimumSize( QSize( 20, 20 ) );
    komiSpin->setMaximumSize( QSize( 60, 32767 ) );
    komiSpin->setFocusPolicy( KomiSpinBox::StrongFocus );
    komiSpin->setAcceptDrops( TRUE );
    Layout15->addWidget( komiSpin );

    groupBox4Layout->addLayout( Layout15, 1, 0 );

    _oneColorGoCheckbox = new QCheckBox( groupBox4, "_oneColorGoCheckbox" );
    _oneColorGoCheckbox->setEnabled( TRUE );

    groupBox4Layout->addWidget( _oneColorGoCheckbox, 0, 1 );

    QNewGameDlgGuiLayout->addMultiCellWidget( groupBox4, 1, 1, 0, 1 );

    groupBox1_2_2 = new QGroupBox( this, "groupBox1_2_2" );
    groupBox1_2_2->setColumnLayout(0, Qt::Vertical );
    groupBox1_2_2->layout()->setSpacing( 6 );
    groupBox1_2_2->layout()->setMargin( 11 );
    groupBox1_2_2Layout = new QGridLayout( groupBox1_2_2->layout() );
    groupBox1_2_2Layout->setAlignment( Qt::AlignTop );

    _WhiteLevelSpinBox = new QSpinBox( groupBox1_2_2, "_WhiteLevelSpinBox" );
    _WhiteLevelSpinBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, _WhiteLevelSpinBox->sizePolicy().hasHeightForWidth() ) );
    _WhiteLevelSpinBox->setMaxValue( 10 );
    _WhiteLevelSpinBox->setValue( 10 );

    groupBox1_2_2Layout->addWidget( _WhiteLevelSpinBox, 2, 2 );

    textLabel1_2_2 = new QLabel( groupBox1_2_2, "textLabel1_2_2" );

    groupBox1_2_2Layout->addMultiCellWidget( textLabel1_2_2, 2, 2, 0, 1 );

    textLabel1_3 = new QLabel( groupBox1_2_2, "textLabel1_3" );

    groupBox1_2_2Layout->addWidget( textLabel1_3, 1, 0 );

    _WhitePlayerLineEdit = new QLineEdit( groupBox1_2_2, "_WhitePlayerLineEdit" );
    _WhitePlayerLineEdit->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, _WhitePlayerLineEdit->sizePolicy().hasHeightForWidth() ) );

    groupBox1_2_2Layout->addMultiCellWidget( _WhitePlayerLineEdit, 1, 1, 1, 2 );

    _WhiteTypeComboBox = new QComboBox( FALSE, groupBox1_2_2, "_WhiteTypeComboBox" );
    _WhiteTypeComboBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, _WhiteTypeComboBox->sizePolicy().hasHeightForWidth() ) );

    groupBox1_2_2Layout->addMultiCellWidget( _WhiteTypeComboBox, 0, 0, 1, 2 );

    pixmapLabel2_2 = new QLabel( groupBox1_2_2, "pixmapLabel2_2" );
    pixmapLabel2_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, pixmapLabel2_2->sizePolicy().hasHeightForWidth() ) );
    pixmapLabel2_2->setPixmap( image2 );
    pixmapLabel2_2->setScaledContents( TRUE );

    groupBox1_2_2Layout->addWidget( pixmapLabel2_2, 0, 0 );

    QNewGameDlgGuiLayout->addWidget( groupBox1_2_2, 0, 0 );
    spacer3 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    QNewGameDlgGuiLayout->addMultiCell( spacer3, 3, 3, 0, 1 );

    Layout1 = new QHBoxLayout( 0, 0, 6, "Layout1"); 
    Horizontal_Spacing2 = new QSpacerItem( 224, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    Layout1->addItem( Horizontal_Spacing2 );

    _OkPushButton = new QPushButton( this, "_OkPushButton" );
    _OkPushButton->setAutoDefault( TRUE );
    _OkPushButton->setDefault( TRUE );
    Layout1->addWidget( _OkPushButton );

    _CancelPushButton = new QPushButton( this, "_CancelPushButton" );
    _CancelPushButton->setAutoDefault( TRUE );
    Layout1->addWidget( _CancelPushButton );

    QNewGameDlgGuiLayout->addMultiCellLayout( Layout1, 4, 4, 0, 1 );
    languageChange();
    resize( QSize(400, 375).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( _OkPushButton, SIGNAL( clicked() ), this, SLOT( accept() ) );
    connect( _CancelPushButton, SIGNAL( clicked() ), this, SLOT( reject() ) );
    connect( _FilePathButton, SIGNAL( clicked() ), this, SLOT( slotGetFileName() ) );

    // tab order
    setTabOrder( _WhiteTypeComboBox, _WhitePlayerLineEdit );
    setTabOrder( _WhitePlayerLineEdit, _WhiteLevelSpinBox );
    setTabOrder( _WhiteLevelSpinBox, _BlackTypeComboBox );
    setTabOrder( _BlackTypeComboBox, _BlackPlayerLineEdit );
    setTabOrder( _BlackPlayerLineEdit, _BlackLevelSpinBox );
    setTabOrder( _BlackLevelSpinBox, _SizeSpinBox );
    setTabOrder( _SizeSpinBox, komiSpin );
    setTabOrder( komiSpin, _HandicapSpinBox );
    setTabOrder( _HandicapSpinBox, _oneColorGoCheckbox );
    setTabOrder( _oneColorGoCheckbox, _LineEdit_GameToLoad );
    setTabOrder( _LineEdit_GameToLoad, _OkPushButton );
    setTabOrder( _OkPushButton, _CancelPushButton );
}

/*
 *  Destroys the object and frees any allocated resources
 */
QNewGameDlgGui::~QNewGameDlgGui()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void QNewGameDlgGui::languageChange()
{
    setCaption( tr( "Computer Game" ) );
    IGSgroup_box_2->setTitle( tr( "Load game" ) );
    _FilePathButton->setText( QString::null );
    groupBox1_2->setTitle( tr( "Black Player" ) );
    textLabel1_2->setText( tr( "Computer Level" ) );
    textLabel1->setText( tr( "Name" ) );
    groupBox4->setTitle( tr( "New Game" ) );
    TextLabel3->setText( tr( "Board size:" ) );
    TextLabel5->setText( tr( "Handicap:" ) );
    TextLabel4->setText( tr( "Komi:" ) );
    _oneColorGoCheckbox->setText( tr( "One Color Go" ) );
    groupBox1_2_2->setTitle( tr( "White Player" ) );
    textLabel1_2_2->setText( tr( "Computer Level" ) );
    textLabel1_3->setText( tr( "Name" ) );
    _OkPushButton->setText( tr( "&OK" ) );
    _OkPushButton->setAccel( QKeySequence( QString::null ) );
    _CancelPushButton->setText( tr( "&Cancel" ) );
    _CancelPushButton->setAccel( QKeySequence( QString::null ) );
}

void QNewGameDlgGui::slotGetFileName()
{
    qWarning( "QNewGameDlgGui::slotGetFileName(): Not implemented yet" );
}

#include "qnewgamedlg_gui.moc"
